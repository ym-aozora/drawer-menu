{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///highendrawer.min.js","webpack:///webpack/bootstrap f6f9560126df1c56f802","webpack:///./src/const.js","webpack:///./src/helper.js","webpack:///./src/util.js","webpack:///./src/support.js","webpack:///./src/highendrawer.js"],"names":["root","factory","exports","module","define","amd","this","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","PREFIX","DRAWER_STYLE","freeze","display","position","overflowX","overflowY","zIndex","opacity","webkitOverflowScrolling","OVERLAY_STYLE","backgroundColor","top","right","bottom","left","TRANSITION_STYLE","transform","transitionProperty","transitionTimingFunction","transitionDuration","DEFAULT_DRAWER_PROPERTY","element","direction","size","maxsize","swipeable","swipearea","duration","zindex","style","initcreate","enabledmaxwidth","history","overlay","oncreate","ondestroy","onopen","onclose","onchangestate","onresize","ontouchstart","ontouchmove","ontouchfinish","onerror","DEFAULT_OVERLAY_PROPERTY","autocreate","DEFAULT_PROCESS","touches","istouchactive","istouchpointactive","istouchdirectionactive","time","start","end","TOUCH_EVENTS","generateid","currentid","hasstyle","styles","ss","_util","isarray","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","dom","err","return","setstyle","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","vsn","validstylename","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_const","pfx","namewithprefix","ucfirst","unsetstyle","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","window","document","createElement","str","charAt","toUpperCase","substr","obj","toString","support","_helper","sup","transform3d","transition","cssanim","transrate","_classCallCheck","instance","Constructor","TypeError","_typeof","constructor","_extends","assign","target","arguments","length","source","key","_createClass","defineProperties","props","descriptor","writable","protoProps","staticProps","helper","newObj","default","_support","Highendrawer","drawer","_this","state","_id","_drawer","_overlay","_timeoutid","_intervalid","_process","_enabled","_handler","_getdrawerhandler","addEventListener","innerWidth","destroy","create","pushState","replaceState","id","_createdrawer","_createoverlay","apply","e","_destroydrawer","_destroyoverlay","isfireevent","ischangehistory","_changestate","fail","_getminposition","_this2","Promise","resolve","reject","then","_this3","_resetdrawer","forEach","_this4","removeEventListener","_this5","isautocreated","touchhandler","close","body","appendChild","parentNode","removeChild","isunset","_setprops","ims","_getinitdrawerstyle","sizepixel","_normalizepixel","maxsizepixel","_sizepixel","_position","width","height","Error","minp","_getoverlaystyle","_getoverlayopacityfromposition","_getdrawerstyle","_this6","Date","fromopy","_getoverlayopacityfromstyle","toopy","frompos","_getdrawerpositionfromstyle","topos","clearInterval","setInterval","nowpos","nowopy","prp","len","moveinfo","_gettouchmoveinfo","vertical","axis","horizontal","y","x","_getstatefromposition","_this7","handler","resize","_touchhandler","bind","popstate","ev","touch","push","type","_ontouchstart","_ontouchmove","_ontouchfinish","getTime","_istouchpointactive","_istouchdirectionactive","isfiretouchstart","_showoverlay","_showdrawer","stopPropagation","preventDefault","_getdrawerpositionfromtouches","_gettouchmovestate","changestate","_this8","callbacks","_handlecallback","du","clearTimeout","back","setTimeout","_hidedrawer","_hideoverlay","rg","_getrange","from","clientX","to","clientY","pos","Math","abs","touchbasis","touchlast","distance","_getdistance","curpos","round","_normalizenumber","posratio","parseFloat","basis","_convertpixelabs","innerHeight","nvalue","normalized","unit","String","match","Number","replace","offsetHeight","offsetWidth","promise","_this9","callback","cb","rcb","prom","catch","reduce"],"mappings":"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","file":"highendrawer.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Highendrawer\"] = factory();\n\telse\n\t\troot[\"Highendrawer\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition","/*!\n * highendrawer - Highendrawer provides javascript and css drawers to your website and applications.\n * @version v0.0.12\n * @link https://github.com/ym-aozora/highendrawer#readme\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Highendrawer\"] = factory();\n\telse\n\t\troot[\"Highendrawer\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 4);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Vendor prefix list.\n *\n * @type {string[]}\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar PREFIX = exports.PREFIX = ['webkit', 'moz', 'o', 'ms'];\n\n/**\n * Drawer's default css style.\n *\n * @type {Object}\n */\nvar DRAWER_STYLE = exports.DRAWER_STYLE = Object.freeze({\n  display: 'block',\n  position: 'fixed',\n  overflowX: 'hidden',\n  overflowY: 'auto',\n  zIndex: -1,\n  opacity: 0,\n  webkitOverflowScrolling: 'touch'\n});\n\n/**\n * Overlay's default css style.\n *\n * @type {Object}\n */\nvar OVERLAY_STYLE = exports.OVERLAY_STYLE = Object.freeze({\n  display: 'none',\n  backgroundColor: '#000',\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: -1,\n  opacity: 0\n});\n\n/**\n * Css transition style.\n *\n * @type {Object}\n */\nvar TRANSITION_STYLE = exports.TRANSITION_STYLE = Object.freeze({\n  transform: '',\n  transitionProperty: 'transform,opacity',\n  transitionTimingFunction: 'cubic-bezier(0, 0.8, 0.95, 1)',\n  transitionDuration: '0ms'\n});\n\n/**\n * Default drawer property.\n *\n * @type {Drawer}\n */\nvar DEFAULT_DRAWER_PROPERTY = exports.DEFAULT_DRAWER_PROPERTY = Object.freeze({\n  element: null,\n  direction: 'right',\n  size: '80%',\n  maxsize: -1,\n  swipeable: true,\n  swipearea: 20,\n  duration: 400,\n  zindex: 9999,\n  style: {},\n  initcreate: true,\n  enabledmaxwidth: -1,\n  history: true,\n  overlay: null,\n  oncreate: null,\n  ondestroy: null,\n  onopen: null,\n  onclose: null,\n  onchangestate: null,\n  onresize: null,\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchfinish: null,\n  onerror: null\n});\n\n/**\n * Default overlay property.\n *\n * @type {Overlay}\n */\nvar DEFAULT_OVERLAY_PROPERTY = exports.DEFAULT_OVERLAY_PROPERTY = Object.freeze({\n  element: null,\n  opacity: 0.4,\n  zindex: -1,\n  autocreate: false\n});\n\n/**\n * Default processing state object.\n *\n * @type {Object}\n */\nvar DEFAULT_PROCESS = exports.DEFAULT_PROCESS = Object.freeze({\n  touches: [],\n  istouchactive: null,\n  istouchpointactive: null,\n  istouchdirectionactive: null,\n  time: {\n    start: 0,\n    end: 0\n  }\n});\n\n/**\n * Touch event list.\n *\n * @type {string[]}\n */\nvar TOUCH_EVENTS = exports.TOUCH_EVENTS = ['touchstart', 'touchmove', 'touchend', 'touchcancel'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.generateid = generateid;\nexports.hasstyle = hasstyle;\nexports.setstyle = setstyle;\nexports.unsetstyle = unsetstyle;\n\nvar _const = __webpack_require__(0);\n\nvar _util = __webpack_require__(2);\n\nvar dom = window.document.createElement('div');\n\nvar currentid = 0;\nvar validstylename = {};\n\n/**\n * Generate ID.\n *\n * @return {number} ID.\n */\nfunction generateid() {\n  return ++currentid;\n}\n\n/**\n * Verify that the style is present.\n *\n * @param {string[]|string} styles Css styles.\n * @return {boolean} Result of verification.\n */\nfunction hasstyle(styles) {\n  var ss = styles;\n\n  if (!(0, _util.isarray)(styles)) {\n    ss = [styles];\n  }\n\n  var _iteratorNormalCompletion = true;\n  var _didIteratorError = false;\n  var _iteratorError = undefined;\n\n  try {\n    for (var _iterator = ss[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n      var style = _step.value;\n\n      if (typeof dom.style[style] !== 'undefined') {\n        return true;\n      }\n    }\n  } catch (err) {\n    _didIteratorError = true;\n    _iteratorError = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion && _iterator.return) {\n        _iterator.return();\n      }\n    } finally {\n      if (_didIteratorError) {\n        throw _iteratorError;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Set the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {Object} style Css style.\n */\nfunction setstyle(element, style) {\n  var _iteratorNormalCompletion2 = true;\n  var _didIteratorError2 = false;\n  var _iteratorError2 = undefined;\n\n  try {\n    for (var _iterator2 = Object.keys(style)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n      var name = _step2.value;\n\n      var vsn = validstylename[name];\n\n      if (vsn) {\n        element.style[vsn] = style[name];\n      } else if (typeof element.style[name] === 'undefined') {\n        for (var i = 0; i < 2; i++) {\n          var _iteratorNormalCompletion3 = true;\n          var _didIteratorError3 = false;\n          var _iteratorError3 = undefined;\n\n          try {\n            for (var _iterator3 = _const.PREFIX[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n              var pfx = _step3.value;\n\n              var namewithprefix = (i === 0 ? pfx : (0, _util.ucfirst)(pfx)) + (0, _util.ucfirst)(name);\n\n              if (typeof element.style[namewithprefix] !== 'undefined') {\n                validstylename[name] = namewithprefix;\n                element.style[namewithprefix] = style[name];\n                break;\n              }\n            }\n          } catch (err) {\n            _didIteratorError3 = true;\n            _iteratorError3 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion3 && _iterator3.return) {\n                _iterator3.return();\n              }\n            } finally {\n              if (_didIteratorError3) {\n                throw _iteratorError3;\n              }\n            }\n          }\n        }\n      } else {\n        validstylename[name] = name;\n        element.style[name] = style[name];\n      }\n    }\n  } catch (err) {\n    _didIteratorError2 = true;\n    _iteratorError2 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion2 && _iterator2.return) {\n        _iterator2.return();\n      }\n    } finally {\n      if (_didIteratorError2) {\n        throw _iteratorError2;\n      }\n    }\n  }\n}\n\n/**\n * Unset the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {string[]|string} styles Css styles.\n */\nfunction unsetstyle(element, styles) {\n  var style = {};\n\n  var _iteratorNormalCompletion4 = true;\n  var _didIteratorError4 = false;\n  var _iteratorError4 = undefined;\n\n  try {\n    for (var _iterator4 = ((0, _util.isarray)(styles) ? styles : [styles])[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n      var name = _step4.value;\n\n      style[name] = '';\n    }\n  } catch (err) {\n    _didIteratorError4 = true;\n    _iteratorError4 = err;\n  } finally {\n    try {\n      if (!_iteratorNormalCompletion4 && _iterator4.return) {\n        _iterator4.return();\n      }\n    } finally {\n      if (_didIteratorError4) {\n        throw _iteratorError4;\n      }\n    }\n  }\n\n  setstyle(element, style);\n}\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n/**\n * Convert the first letter to uppercase.\n *\n * @param {string} str Target character string.\n * @return {string} Converted string.\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ucfirst = ucfirst;\nexports.isarray = isarray;\nfunction ucfirst(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Whether or not the object is an array.\n *\n * @param {any} obj Target object.\n * @return {boolean} Returns true if object is an Array.\n */\nfunction isarray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.support = undefined;\n\nvar _helper = __webpack_require__(1);\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nvar sup = {};\n\nsup.transform3d = (0, _helper.hasstyle)(['perspectiveProperty', 'webkitPerspective', 'mozPerspective', 'oPerspective', 'msPerspective']);\n\nsup.transform = (0, _helper.hasstyle)(['transformProperty', 'webkitTransform', 'mozTransform', 'oTransform', 'msTransform']);\n\nsup.transition = (0, _helper.hasstyle)(['transitionProperty', 'webkitTransitionProperty', 'mozTransitionProperty', 'oTransitionProperty', 'msTransitionProperty']);\n\nsup.cssanim = (sup.transform3d || sup.transform) && sup.transition;\n\nsup.transrate = sup.transform3d ? 'translate3d' : 'translate';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nvar support = exports.support = Object.freeze(sup);\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _const = __webpack_require__(0);\n\nvar _util = __webpack_require__(2);\n\nvar _helper = __webpack_require__(1);\n\nvar helper = _interopRequireWildcard(_helper);\n\nvar _support = __webpack_require__(3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Class providing a drawer function.\n *\n * @public\n * @class\n * @example\n * var drawer = new Highendrawer({\n *   element: document.getElementById('drawer')\n * });\n */\nvar Highendrawer = function () {\n\n  /**\n   * Initialize object.\n   *\n   * @constructor\n   * @param {Drawer} drawer Initial parameters of drawer.\n   */\n  function Highendrawer(drawer) {\n    var _this = this;\n\n    _classCallCheck(this, Highendrawer);\n\n    /**\n     * Drawer status ('open' or 'close')\n     *\n     * @public\n     * @type {string}\n     */\n    this.state = 'close';\n\n    this._id = helper.generateid();\n    this._drawer = _extends({}, _const.DEFAULT_DRAWER_PROPERTY, drawer);\n    this._overlay = this._drawer.overlay === false ? false : _extends({}, _const.DEFAULT_OVERLAY_PROPERTY, this._drawer.overlay);\n    this._timeoutid = null;\n    this._intervalid = null;\n    this._process = _extends({}, _const.DEFAULT_PROCESS);\n    this._enabled = false;\n    this._handler = this._getdrawerhandler();\n\n    if (this._drawer.enabledmaxwidth > -1) {\n      window.addEventListener('resize', function () {\n        if (_this._enabled && window.innerWidth > _this._drawer.enabledmaxwidth) {\n          _this.destroy();\n        } else if (!_this._enabled && window.innerWidth <= _this._drawer.enabledmaxwidth) {\n          _this.create();\n        }\n      });\n    }\n\n    if (window.history && window.history.pushState && this._drawer.history) {\n      window.history.replaceState({\n        id: this._id\n      }, null, null);\n    }\n\n    if (this._drawer.initcreate) {\n      this.create();\n    }\n  }\n\n  /**\n   * Create the drawer set.\n   *\n   * @public\n   */\n\n\n  _createClass(Highendrawer, [{\n    key: 'create',\n    value: function create() {\n      try {\n        this._createdrawer();\n        this._createoverlay();\n        this._enabled = true;\n\n        if (this._drawer.oncreate) {\n          this._drawer.oncreate.apply(this, [this._drawer]);\n        }\n      } catch (e) {\n        if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n          this._drawer.onerror.apply(this, [e]);\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    /**\n     * Destroy the drawer set.\n     *\n     * @public\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      try {\n        this._destroydrawer();\n        this._destroyoverlay();\n        this._enabled = false;\n\n        if (this._drawer.ondestroy) {\n          this._drawer.ondestroy.apply(this, [this._drawer]);\n        }\n      } catch (e) {\n        if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n          this._drawer.onerror.apply(this, [e]);\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    /**\n     * Open drawer.\n     *\n     * @public\n     * @param {number} [duration] Drawer moving time.\n     * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n     * @param {boolean} [ischangehistory=false] Make a change in history.\n     * @return {Promise} Promise object for open.\n     */\n\n  }, {\n    key: 'open',\n    value: function open() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var isfireevent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ischangehistory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      return this._changestate(0, duration, {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onopen : null,\n        fail: isfireevent ? this._drawer.onerror : null\n      }, ischangehistory);\n    }\n\n    /**\n     * Close drawer.\n     *\n     * @public\n     * @param {number} [duration] Drawer moving time.\n     * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n     * @param {boolean} [ischangehistory=false] Make a change in history.\n     * @return {Promise} Promise object for close.\n     */\n\n  }, {\n    key: 'close',\n    value: function close() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var isfireevent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ischangehistory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      return this._changestate(this._getminposition(), duration, {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onclose : null,\n        fail: isfireevent ? this._drawer.onerror : null\n      }, ischangehistory);\n    }\n\n    /**\n     * Toggle drawer.\n     *\n     * @public\n     * @param {number} [duration] Drawer moving time.\n     * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n     * @param {boolean} [ischangehistory=false] Make a change in history.\n     * @return {Promise} Promise object for toggle.\n     */\n\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      var _this2 = this;\n\n      var isfireevent = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var ischangehistory = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n      return new Promise(function (resolve, reject) {\n        try {\n          _this2[_this2.state === 'open' ? 'close' : 'open'](duration, isfireevent, ischangehistory).then(resolve, reject);\n        } catch (e) {\n          reject(e);\n        }\n      });\n    }\n\n    /**\n     * Create drawer.\n     */\n\n  }, {\n    key: '_createdrawer',\n    value: function _createdrawer() {\n      var _this3 = this;\n\n      helper.setstyle(this._drawer.element, _extends({}, _const.DRAWER_STYLE, _support.support.cssanim ? _const.TRANSITION_STYLE : {}));\n\n      this._resetdrawer();\n\n      Object.keys(this._handler).forEach(function (name) {\n        window.addEventListener(name, _this3._handler[name]);\n      });\n    }\n\n    /**\n     * Destroy drawer.\n     */\n\n  }, {\n    key: '_destroydrawer',\n    value: function _destroydrawer() {\n      var _this4 = this;\n\n      Object.keys(this._handler).forEach(function (name) {\n        window.removeEventListener(name, _this4._handler[name]);\n      });\n\n      this._resetdrawer(true);\n\n      helper.unsetstyle(this._drawer.element, Object.keys(_extends({}, _const.DRAWER_STYLE, _support.support.cssanim ? _const.TRANSITION_STYLE : {})));\n    }\n\n    /**\n     * Create overlay.\n     */\n\n  }, {\n    key: '_createoverlay',\n    value: function _createoverlay() {\n      var _this5 = this;\n\n      if (this._overlay === false) {\n        return;\n      }\n\n      if (this._overlay.zindex === -1) {\n        this._overlay.zindex = this._drawer.zindex - 1;\n      }\n\n      if (!this._overlay.element) {\n        this._overlay.element = window.document.createElement('div');\n        this._overlay.isautocreated = true;\n\n        helper.setstyle(this._overlay.element, _extends({}, _const.OVERLAY_STYLE, _support.support.cssanim ? _const.TRANSITION_STYLE : {}));\n      }\n\n      if (!this._overlay.touchhandler) {\n        this._overlay.touchhandler = function (e) {\n          _this5.close();\n        };\n      }\n\n      window.document.body.appendChild(this._overlay.element);\n    }\n\n    /**\n     * Destroy overlay.\n     */\n\n  }, {\n    key: '_destroyoverlay',\n    value: function _destroyoverlay() {\n      if (this._overlay === false) {\n        return;\n      }\n\n      if (this._overlay.element) {\n        this._overlay.element.removeEventListener('click', this._overlay.touchhandler);\n\n        if (this._overlay.isautocreated) {\n          this._overlay.element.parentNode.removeChild(this._overlay.element);\n        }\n      }\n    }\n\n    /**\n     * Reset drawer.\n     *\n     * @param {boolean} [isunset] Unset style.\n     */\n\n  }, {\n    key: '_resetdrawer',\n    value: function _resetdrawer() {\n      var isunset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      try {\n        this._setprops();\n\n        var ims = this._getinitdrawerstyle();\n\n        if (isunset) {\n          helper.unsetstyle(this._drawer.element, Object.keys(ims));\n        } else {\n          helper.setstyle(this._drawer.element, ims);\n        }\n      } catch (e) {\n        if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n          this._drawer.onerror.apply(this, [e]);\n        } else {\n          throw e;\n        }\n      }\n    }\n\n    /**\n     * Show drawer.\n     */\n\n  }, {\n    key: '_showdrawer',\n    value: function _showdrawer() {\n      helper.setstyle(this._drawer.element, {\n        zIndex: this._drawer.zindex,\n        opacity: 1\n      });\n    }\n\n    /**\n     * Hide drawer.\n     */\n\n  }, {\n    key: '_hidedrawer',\n    value: function _hidedrawer() {\n      helper.setstyle(this._drawer.element, {\n        zIndex: -1,\n        opacity: 0\n      });\n    }\n\n    /**\n     * Show overlay.\n     */\n\n  }, {\n    key: '_showoverlay',\n    value: function _showoverlay() {\n      helper.setstyle(this._overlay.element, {\n        zIndex: this._overlay.zindex,\n        display: 'block'\n      });\n    }\n\n    /**\n     * Hide overlay.\n     */\n\n  }, {\n    key: '_hideoverlay',\n    value: function _hideoverlay() {\n      helper.setstyle(this._overlay.element, {\n        zIndex: -1,\n        display: 'none'\n      });\n    }\n\n    /**\n     * Set properties.\n     */\n\n  }, {\n    key: '_setprops',\n    value: function _setprops() {\n      // set sizepixel\n      var sizepixel = this._normalizepixel(this._drawer.size);\n\n      if (this._drawer.maxsize && this._drawer.maxsize !== -1) {\n        var maxsizepixel = this._normalizepixel(this._drawer.maxsize);\n\n        if (sizepixel > maxsizepixel) {\n          sizepixel = maxsizepixel;\n        }\n      }\n\n      this._sizepixel = sizepixel;\n\n      // set position\n      this._position = typeof this._position === 'undefined' ? null : this._position;\n    }\n\n    /**\n     * Return initial style of drawer.\n     *\n     * @return {Object} Style for drawer.\n     */\n\n  }, {\n    key: '_getinitdrawerstyle',\n    value: function _getinitdrawerstyle() {\n      var style = null;\n\n      switch (this._drawer.direction) {\n        case 'top':\n          style = {\n            width: '100%',\n            height: this._sizepixel + 'px',\n            top: '-' + this._sizepixel + 'px',\n            right: 'auto',\n            bottom: 'auto',\n            left: 0\n          };\n          break;\n        case 'right':\n          style = {\n            width: this._sizepixel + 'px',\n            height: '100%',\n            top: 0,\n            right: '-' + this._sizepixel + 'px',\n            bottom: 'auto',\n            left: 'auto'\n          };\n          break;\n        case 'bottom':\n          style = {\n            width: '100%',\n            height: this._sizepixel + 'px',\n            top: 'auto',\n            right: 'auto',\n            bottom: '-' + this._sizepixel + 'px',\n            left: 0\n          };\n          break;\n        case 'left':\n          style = {\n            width: this._sizepixel + 'px',\n            height: '100%',\n            top: 0,\n            right: 'auto',\n            bottom: 'auto',\n            left: '-' + this._sizepixel + 'px'\n          };\n          break;\n        default:\n          throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n      }\n\n      return _extends(style, this._drawer.style || {});\n    }\n\n    /**\n     * Return style for moving the drawer.\n     *\n     * @param {number} position Moving position.\n     * @param {number} [duration] Drawer moving time.\n     * @return {Object} Move style for drawer.\n     */\n\n  }, {\n    key: '_getdrawerstyle',\n    value: function _getdrawerstyle(position) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var minp = this._getminposition(this._drawer);\n      var style = {};\n\n      if (_support.support.cssanim) {\n        style.transitionDuration = (duration === null ? this._drawer.duration : duration) + 'ms';\n\n        switch (this._drawer.direction) {\n          case 'top':\n            style.transform = _support.support.transrate + '(0,' + -(minp - position) + 'px,0)';\n            break;\n          case 'right':\n            style.transform = _support.support.transrate + '(' + (minp - position) + 'px,0,0)';\n            break;\n          case 'bottom':\n            style.transform = _support.support.transrate + '(0,' + (minp - position) + 'px,0)';\n            break;\n          case 'left':\n            style.transform = _support.support.transrate + '(' + -(minp - position) + 'px,0,0)';\n            break;\n          default:\n            throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n        }\n      } else {\n        style[this._drawer.direction] = position + 'px';\n      }\n\n      return style;\n    }\n\n    /**\n     * Return style for moving the overlay.\n     *\n     * @param {float} opacity Overlay opacity.\n     * @param {number} [duration] Drawer moving time.\n     * @return {Object} Move style for overlay.\n     */\n\n  }, {\n    key: '_getoverlaystyle',\n    value: function _getoverlaystyle(opacity) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var style = {\n        opacity: opacity\n      };\n\n      if (_support.support.cssanim) {\n        style.transitionDuration = (duration === null ? this._drawer.duration : duration) + 'ms';\n      }\n\n      return style;\n    }\n\n    /**\n     * Make animation with CSS3.\n     *\n     * @param {number} duration Drawer moving time.\n     */\n\n  }, {\n    key: '_cssanimate',\n    value: function _cssanimate(duration) {\n      helper.setstyle(this._overlay.element, this._getoverlaystyle(this._getoverlayopacityfromposition(this._position), duration));\n\n      helper.setstyle(this._drawer.element, this._getdrawerstyle(this._position, duration));\n    }\n\n    /**\n     * Make animation with Javascript.\n     *\n     * @param {number} duration Drawer moving time.\n     */\n\n  }, {\n    key: '_jsanimate',\n    value: function _jsanimate(duration) {\n      var _this6 = this;\n\n      var start = +new Date();\n      var fromopy = this._getoverlayopacityfromstyle();\n      var toopy = this._getoverlayopacityfromposition(this._position);\n      var frompos = this._getdrawerpositionfromstyle();\n      var topos = this._position;\n\n      if (this._intervalid) {\n        clearInterval(this._intervalid);\n      }\n\n      this._intervalid = setInterval(function () {\n        var time = new Date() - start;\n        var nowpos = null;\n        var nowopy = null;\n\n        if (time > duration) {\n          clearInterval(_this6._intervalid);\n          _this6._intervalid = null;\n          nowopy = toopy;\n          nowpos = topos;\n        } else {\n          var prp = (time /= duration) * (time - 2);\n          nowopy = fromopy - (toopy - fromopy) * prp;\n          nowpos = frompos - (topos - frompos) * prp;\n        }\n\n        helper.setstyle(_this6._overlay.element, _this6._getoverlaystyle(nowopy, duration));\n\n        helper.setstyle(_this6._drawer.element, _this6._getdrawerstyle(nowpos, duration));\n      }, 10);\n    }\n\n    /**\n     * Return state by touch movement.\n     *\n     * @return {string} State by touch movement.\n     */\n\n  }, {\n    key: '_gettouchmovestate',\n    value: function _gettouchmovestate() {\n      if (this._process.time.end - this._process.time.start <= 300) {\n        var len = this._process.touches.length;\n        var moveinfo = this._gettouchmoveinfo(this._process.touches[len - 2], this._process.touches[len - 1]);\n        var vertical = moveinfo.axis === 'vertical';\n        var horizontal = moveinfo.axis === 'horizontal';\n        var top = this._drawer.direction === 'top' && moveinfo.y >= 0;\n        var right = this._drawer.direction === 'right' && moveinfo.x < 0;\n        var bottom = this._drawer.direction === 'bottom' && moveinfo.y < 0;\n        var left = this._drawer.direction === 'left' && moveinfo.x >= 0;\n\n        return vertical && (bottom || top) || horizontal && (right || left) ? 'open' : 'close';\n      }\n\n      return this._getstatefromposition();\n    }\n\n    /**\n     * Return drawer event handler.\n     *\n     * @return {Object} Drawer event handler.\n     */\n\n  }, {\n    key: '_getdrawerhandler',\n    value: function _getdrawerhandler() {\n      var _this7 = this;\n\n      var handler = {};\n\n      handler.resize = function () {\n        _this7._resetdrawer();\n        _this7[_this7.state](0, false, false);\n\n        if (_this7._drawer.onresize) {\n          _this7._drawer.onresize.apply(_this7, [_this7._drawer]);\n        }\n      };\n\n      if (this._drawer.swipeable) {\n        var _iteratorNormalCompletion = true;\n        var _didIteratorError = false;\n        var _iteratorError = undefined;\n\n        try {\n          for (var _iterator = _const.TOUCH_EVENTS[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n            var event = _step.value;\n\n            handler[event] = this._touchhandler.bind(this);\n          }\n        } catch (err) {\n          _didIteratorError = true;\n          _iteratorError = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion && _iterator.return) {\n              _iterator.return();\n            }\n          } finally {\n            if (_didIteratorError) {\n              throw _iteratorError;\n            }\n          }\n        }\n      }\n\n      if (window.history && window.history.pushState && this._drawer.history) {\n        handler.popstate = function (e) {\n          if (e.state && e.state.id === _this7._id && _this7.state === 'open') {\n            _this7.close(null, true, false);\n          }\n        };\n      }\n\n      return handler;\n    }\n\n    /**\n     * Touch event handler.\n     *\n     * @param {Event} ev Touch event object.\n     * @return {boolean} Event bubbling.\n     */\n\n  }, {\n    key: '_touchhandler',\n    value: function _touchhandler(ev) {\n      try {\n        if (ev.touches.length > 1) {\n          return true;\n        }\n\n        var touch = ev.touches[0];\n\n        if (touch) {\n          this._process.touches.push(touch);\n        }\n\n        switch (ev.type) {\n          case 'touchstart':\n            this._ontouchstart(ev);\n            break;\n          case 'touchmove':\n            this._ontouchmove(ev);\n            break;\n          case 'touchcancel':\n          case 'touchend':\n            this._ontouchfinish(ev);\n            break;\n          default:\n            break;\n        }\n      } catch (e) {\n        if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n          this._drawer.onerror.apply(this, [e]);\n        } else {\n          throw e;\n        }\n      }\n\n      return true;\n    }\n\n    /**\n     * Touch start event handler.\n     *\n     * @param {Event} ev Touch event object.\n     */\n\n  }, {\n    key: '_ontouchstart',\n    value: function _ontouchstart(ev) {\n      this._process.time.start = new Date().getTime();\n    }\n\n    /**\n     * Touch move event handler.\n     *\n     * @param {Event} ev Touch event object.\n     */\n\n  }, {\n    key: '_ontouchmove',\n    value: function _ontouchmove(ev) {\n      var len = this._process.touches.length;\n\n      if (len < 2) {\n        return;\n      }\n\n      if (!this._process.istouchpointactive) {\n        this._process.istouchpointactive = this._istouchpointactive();\n      }\n\n      if (!this._process.istouchpointactive) {\n        return;\n      }\n\n      if (this._process.istouchdirectionactive === null) {\n        this._process.istouchdirectionactive = this._istouchdirectionactive();\n      }\n\n      if (!this._process.istouchdirectionactive) {\n        return;\n      }\n\n      var isfiretouchstart = false;\n      var istouchactive = this._process.istouchpointactive && this._process.istouchdirectionactive;\n\n      if (!istouchactive) {\n        return;\n      }\n\n      if (!this._process.istouchactive) {\n        this._process.istouchactive = istouchactive;\n        this._showoverlay();\n        this._showdrawer();\n\n        if (this._drawer.ontouchstart) {\n          isfiretouchstart = true;\n        }\n      }\n\n      ev.stopPropagation();\n      ev.preventDefault();\n\n      this._position = this._getdrawerpositionfromtouches(this._process.touches[len - 2], this._process.touches[len - 1]);\n\n      if (isfiretouchstart) {\n        this._drawer.ontouchstart.apply(this, [this._drawer, this._position]);\n      }\n\n      helper.setstyle(this._overlay.element, this._getoverlaystyle(this._getoverlayopacityfromposition(this._position), 0));\n\n      helper.setstyle(this._drawer.element, this._getdrawerstyle(this._position, 0));\n\n      if (this._drawer.ontouchmove) {\n        this._drawer.ontouchmove.apply(this, [this._drawer, this._position]);\n      }\n    }\n\n    /**\n     * Touch finish event handler.\n     *\n     * @param {Event} ev Touch event object.\n     */\n\n  }, {\n    key: '_ontouchfinish',\n    value: function _ontouchfinish(ev) {\n      var len = this._process.touches.length;\n\n      if (this._process.istouchactive && len >= 2) {\n        this._process.time.end = new Date().getTime();\n\n        var state = this._gettouchmovestate();\n        var changestate = this.state !== state;\n\n        this[state](null, changestate, changestate);\n\n        if (this._drawer.ontouchfinish) {\n          this._drawer.ontouchfinish.apply(this, [this._drawer, this._getdrawerpositionfromtouches(this._process.touches[len - 2], this._process.touches[len - 1])]);\n        }\n      }\n\n      this._process.touches = [];\n      this._process.istouchactive = null;\n      this._process.istouchpointactive = null;\n      this._process.istouchdirectionactive = null;\n      this._process.time.start = 0;\n      this._process.time.end = 0;\n    }\n\n    /**\n     * Return whether or not a valid touch.\n     *\n     * @param {number} position Moving position.\n     * @param {number} [duration=null] Drawer moving time.\n     * @param {Object} [callbacks=null] Callback objects.\n     * @param {boolean} [ischangehistory=false] Make a change in history.\n     * @return {Promise} Promise object.\n     */\n\n  }, {\n    key: '_changestate',\n    value: function _changestate(position) {\n      var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var _this8 = this;\n\n      var callbacks = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n      var ischangehistory = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : true;\n\n      return this._handlecallback(new Promise(function (resolve, reject) {\n        try {\n          _this8._position = position;\n\n          var du = duration === null ? _this8._drawer.duration : duration;\n\n          if (_this8._timeoutid !== null) {\n            clearTimeout(_this8._timeoutid);\n            _this8._timeoutid = null;\n          }\n\n          var state = _this8._getstatefromposition();\n\n          if (state === 'open') {\n            _this8._showoverlay();\n            _this8._showdrawer();\n          } else {\n            _this8._overlay.element.removeEventListener('click', _this8._overlay.touchhandler);\n          }\n\n          if (ischangehistory && _this8._drawer.history && window.history && window.history.pushState) {\n            if (state === 'open') {\n              window.history.pushState({\n                id: _this8._id\n              }, null, null);\n            } else {\n              window.history.back();\n            }\n          }\n\n          _this8[_support.support.cssanim ? '_cssanimate' : '_jsanimate'](du);\n\n          _this8._timeoutid = setTimeout(function () {\n            if (state === 'open') {\n              _this8._overlay.element.addEventListener('click', _this8._overlay.touchhandler);\n            } else {\n              _this8._hidedrawer();\n              _this8._hideoverlay();\n            }\n\n            _this8._timeoutid = null;\n          }, du);\n\n          _this8.state = state;\n\n          if ((typeof callbacks === 'undefined' ? 'undefined' : _typeof(callbacks)) === 'object' && callbacks.onchangestate) {\n            callbacks.onchangestate.apply(_this8, [_this8._drawer, state]);\n          }\n\n          resolve.apply(_this8, [_this8._drawer]);\n        } catch (e) {\n          reject(e);\n        }\n      }), {\n        done: (typeof callbacks === 'undefined' ? 'undefined' : _typeof(callbacks)) === 'object' && callbacks.done ? callbacks.done : null,\n        fail: (typeof callbacks === 'undefined' ? 'undefined' : _typeof(callbacks)) === 'object' && callbacks.fail ? callbacks.fail : null\n      });\n    }\n\n    /**\n     * Return whether or not a valid touch point.\n     *\n     * @return {boolean} Result of valid touch point.\n     */\n\n  }, {\n    key: '_istouchpointactive',\n    value: function _istouchpointactive() {\n      var rg = this._getrange(this.state === 'open' ? this._sizepixel : this._drawer.swipearea);\n      var len = this._process.touches.length;\n\n      return rg.from.x <= this._process.touches[len - 2].clientX && this._process.touches[len - 2].clientX <= rg.to.x && rg.from.y <= this._process.touches[len - 2].clientY && this._process.touches[len - 2].clientY <= rg.to.y;\n    }\n\n    /**\n     * Return whether or not a valid touch direction.\n     *\n     * @return {boolean} Result of valid touch direction.\n     */\n\n  }, {\n    key: '_istouchdirectionactive',\n    value: function _istouchdirectionactive() {\n      var len = this._process.touches.length;\n      var moveinfo = this._gettouchmoveinfo(this._process.touches[len - 2], this._process.touches[len - 1]);\n      var vertical = moveinfo.axis === 'vertical';\n      var horizontal = moveinfo.axis === 'horizontal';\n\n      if (!(vertical && (this._drawer.direction === 'top' || this._drawer.direction === 'bottom') || horizontal && (this._drawer.direction === 'right' || this._drawer.direction === 'left'))) {\n        return false;\n      }\n\n      return this.state === 'open' && (this._drawer.direction === 'top' && moveinfo.y < 0 || this._drawer.direction === 'right' && moveinfo.x >= 0 || this._drawer.direction === 'bottom' && moveinfo.y >= 0 || this._drawer.direction === 'left' && moveinfo.x < 0) || this.state === 'close' && (this._drawer.direction === 'top' && moveinfo.y >= 0 || this._drawer.direction === 'right' && moveinfo.x < 0 || this._drawer.direction === 'bottom' && moveinfo.y < 0 || this._drawer.direction === 'left' && moveinfo.x >= 0);\n    }\n\n    /**\n     * Return the state of the drawer.\n     *\n     * @return {string} State of the drawer.\n     */\n\n  }, {\n    key: '_getstatefromposition',\n    value: function _getstatefromposition() {\n      var pos = this._position === null ? this._getdrawerpositionfromstyle() : this._position;\n\n      return Math.abs(pos) < this._sizepixel / 2 ? 'open' : 'close';\n    }\n\n    /**\n     * Return the position of the drawer.\n     *\n     * @param {Object} touchbasis Basic touch information.\n     * @param {Object} touchlast Last touch information.\n     * @return {number} Position of the drawer.\n     */\n\n  }, {\n    key: '_getdrawerpositionfromtouches',\n    value: function _getdrawerpositionfromtouches(touchbasis, touchlast) {\n      var distance = this._getdistance(this._gettouchmoveinfo(touchbasis, touchlast));\n\n      var curpos = this._position === null ? this._getdrawerpositionfromstyle() : this._position;\n\n      var pos = Math.round(curpos + distance);\n      var minp = this._getminposition(this._drawer);\n\n      if (pos > 0) {\n        pos = 0;\n      } else if (pos < minp) {\n        pos = minp;\n      }\n\n      return pos;\n    }\n\n    /**\n     * Return the position in the style.\n     *\n     * @return {number} Position in the style.\n     */\n\n  }, {\n    key: '_getdrawerpositionfromstyle',\n    value: function _getdrawerpositionfromstyle() {\n      var value = this._drawer.element.style[this._drawer.direction];\n      return this._normalizenumber(value).value;\n    }\n\n    /**\n     * Return the opacity of the overlay.\n     *\n     * @param {number} position Moving position.\n     * @return {number} Position of the drawer.\n     */\n\n  }, {\n    key: '_getoverlayopacityfromposition',\n    value: function _getoverlayopacityfromposition(position) {\n      var minp = this._getminposition(this._drawer);\n      var posratio = 1 - Math.abs(position) / Math.abs(minp);\n      return this._overlay.opacity * posratio * 10000 / 10000;\n    }\n\n    /**\n     * Return the opacity in the style.\n     *\n     * @return {number} Opacity in the style.\n     */\n\n  }, {\n    key: '_getoverlayopacityfromstyle',\n    value: function _getoverlayopacityfromstyle() {\n      return parseFloat(this._overlay.element.style.opacity);\n    }\n\n    /**\n     * Return the swipe range.\n     *\n     * @param {string|number} value Target swipe area value.\n     * @return {Object} Drag range.\n     * @throws {Error} Is thrown if direction value is invalid.\n     */\n\n  }, {\n    key: '_getrange',\n    value: function _getrange(value) {\n      var basis = this._convertpixelabs(value);\n      var width = window.innerWidth;\n      var height = window.innerHeight;\n\n      switch (this._drawer.direction) {\n        case 'top':\n          return { from: { x: 0, y: 0 }, to: { x: width, y: basis } };\n        case 'right':\n          return { from: { x: basis, y: 0 }, to: { x: width, y: height } };\n        case 'bottom':\n          return { from: { x: 0, y: basis }, to: { x: width, y: height } };\n        case 'left':\n          return { from: { x: 0, y: 0 }, to: { x: basis, y: height } };\n        default:\n          throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n      }\n    }\n\n    /**\n     * Return a value converted to the absolute value of the pixel.\n     *\n     * @param {string|number} value Target value.\n     * @return {number} Converted to the absolute value of the pixel.\n     * @throws {Error} Is thrown if direction value is invalid.\n     */\n\n  }, {\n    key: '_convertpixelabs',\n    value: function _convertpixelabs(value) {\n      var nvalue = this._normalizepixel(value);\n\n      switch (this._drawer.direction) {\n        case 'top':\n        case 'left':\n          return nvalue;\n        case 'right':\n          return window.innerWidth - nvalue;\n        case 'bottom':\n          return window.innerHeight - nvalue;\n        default:\n          throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n      }\n    }\n\n    /**\n     * Return the normalized pixel value.\n     *\n     * @param {string|number} value Target value.\n     * @return {number} Normalized pixel value.\n     * @throws {Error} Is thrown if direction value is invalid.\n     */\n\n  }, {\n    key: '_normalizepixel',\n    value: function _normalizepixel(value) {\n      var normalized = this._normalizenumber(value);\n\n      if (normalized.unit === 'number' || normalized.unit === 'pixel') {\n        return normalized.value;\n      } else if (normalized.unit === 'percent') {\n        switch (this._drawer.direction) {\n          case 'top':\n          case 'bottom':\n            return window.innerHeight * (normalized.value / 100);\n          case 'right':\n          case 'left':\n            return window.innerWidth * (normalized.value / 100);\n          default:\n            throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n        }\n      }\n    }\n\n    /**\n     * Return the numeric normalized information.\n     *\n     * @param {string|number} value Target value.\n     * @return {Object} Numeric normalized information.\n     * @throws {Error} Is thrown if value is invalid.\n     */\n\n  }, {\n    key: '_normalizenumber',\n    value: function _normalizenumber(value) {\n      if (typeof value === 'number') {\n        return { value: value, unit: 'number' };\n      } else if (String(value).match(/^[.\\-0-9]+$/)) {\n        return { value: Number(value), unit: 'number' };\n      } else if (value.match(/^[.\\-0-9]+px$/)) {\n        return { value: Number(value.replace(/px$/ig, '')), unit: 'pixel' };\n      } else if (value.match(/[.\\-0-9]+%$/)) {\n        return { value: Number(value.replace(/%$/ig, '')), unit: 'percent' };\n      }\n\n      throw new Error('\\'' + value + '\\' does not support');\n    }\n\n    /**\n     * Return to the minimum position for the drawer.\n     *\n     * @return {number} Minimum position for the drawer.\n     * @throws {Error} Is thrown if direction value is invalid.\n     */\n\n  }, {\n    key: '_getminposition',\n    value: function _getminposition() {\n      switch (this._drawer.direction) {\n        case 'top':\n        case 'bottom':\n          return -1 * this._drawer.element.offsetHeight;\n        case 'right':\n        case 'left':\n          return -1 * this._drawer.element.offsetWidth;\n        default:\n          throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n      }\n    }\n\n    /**\n     * Return the distance of the drawer.\n     *\n     * @param {Object} moveinfo Movement information of the drawer.\n     * @return {number} Distance of the drawer.\n     * @throws {Error} Is thrown if direction value is invalid.\n     */\n\n  }, {\n    key: '_getdistance',\n    value: function _getdistance(moveinfo) {\n      switch (this._drawer.direction) {\n        case 'top':\n          return moveinfo.y;\n        case 'right':\n          return -1 * moveinfo.x;\n        case 'bottom':\n          return -1 * moveinfo.y;\n        case 'left':\n          return moveinfo.x;\n        default:\n          throw new Error('\\'' + this._drawer.direction + '\\' does not support');\n      }\n    }\n\n    /**\n     * Return the information of touch move.\n     *\n     * @param {Object} touchbasis Basic touch information.\n     * @param {Object} touchlast Last touch information.\n     * @return {Object} Movement distance of the x, y direction, movement direction.\n     */\n\n  }, {\n    key: '_gettouchmoveinfo',\n    value: function _gettouchmoveinfo(touchbasis, touchlast) {\n      var x = touchlast.clientX - touchbasis.clientX;\n      var y = touchlast.clientY - touchbasis.clientY;\n      var axis = Math.abs(x) >= Math.abs(y) ? 'horizontal' : 'vertical';\n\n      return { x: x, y: y, axis: axis };\n    }\n\n    /**\n     * Return the information of touch move.\n     *\n     * @param {Promise} promise Promise instance.\n     * @param {Object} callbacks Callback function with the key to 'done', 'fail', 'always' (each optional).\n     * @return {Promise} Promise instance.\n     */\n\n  }, {\n    key: '_handlecallback',\n    value: function _handlecallback(promise, callbacks) {\n      var _this9 = this;\n\n      if (!callbacks) {\n        return promise;\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = Object.keys(callbacks)[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var key = _step2.value;\n\n          var callback = callbacks[key];\n\n          if (!callback) {\n            continue;\n          }\n\n          var cb = (0, _util.isarray)(callback) ? callback : [callback];\n          var rcb = null;\n\n          switch (key) {\n            case 'done':\n              rcb = function rcb(prom, value) {\n                return prom.then(value.bind(_this9));\n              };\n              break;\n            case 'fail':\n              rcb = function rcb(prom, value) {\n                return prom.catch(value.bind(_this9));\n              };\n              break;\n            case 'always':\n              rcb = function rcb(prom, value) {\n                return prom.then(value.bind(_this9), value.bind(_this9));\n              };\n              break;\n            default:\n              break;\n          }\n\n          if (rcb) {\n            cb.reduce(rcb, promise);\n          }\n        }\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      return promise;\n    }\n  }]);\n\n  return Highendrawer;\n}();\n\nexports.default = Highendrawer;\n\n\nmodule.exports = Highendrawer;\n\n/***/ })\n/******/ ]);\n});\n\n\n// WEBPACK FOOTER //\n// highendrawer.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap f6f9560126df1c56f802","'use strict';\n\n/**\n * Vendor prefix list.\n *\n * @type {string[]}\n */\nexport const PREFIX = ['webkit', 'moz', 'o', 'ms'];\n\n/**\n * Drawer's default css style.\n *\n * @type {Object}\n */\nexport const DRAWER_STYLE = Object.freeze({\n  display: 'block',\n  position: 'fixed',\n  overflowX: 'hidden',\n  overflowY: 'auto',\n  zIndex: -1,\n  opacity: 0,\n  webkitOverflowScrolling: 'touch',\n});\n\n/**\n * Overlay's default css style.\n *\n * @type {Object}\n */\nexport const OVERLAY_STYLE = Object.freeze({\n  display: 'none',\n  backgroundColor: '#000',\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: -1,\n  opacity: 0,\n});\n\n/**\n * Css transition style.\n *\n * @type {Object}\n */\nexport const TRANSITION_STYLE = Object.freeze({\n  transform: '',\n  transitionProperty: 'transform,opacity',\n  transitionTimingFunction: 'cubic-bezier(0, 0.8, 0.95, 1)',\n  transitionDuration: '0ms',\n});\n\n/**\n * Default drawer property.\n *\n * @type {Drawer}\n */\nexport const DEFAULT_DRAWER_PROPERTY = Object.freeze({\n  element: null,\n  direction: 'right',\n  size: '80%',\n  maxsize: -1,\n  swipeable: true,\n  swipearea: 20,\n  duration: 400,\n  zindex: 9999,\n  style: {},\n  initcreate: true,\n  enabledmaxwidth: -1,\n  history: true,\n  overlay: null,\n  oncreate: null,\n  ondestroy: null,\n  onopen: null,\n  onclose: null,\n  onchangestate: null,\n  onresize: null,\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchfinish: null,\n  onerror: null,\n});\n\n/**\n * Default overlay property.\n *\n * @type {Overlay}\n */\nexport const DEFAULT_OVERLAY_PROPERTY = Object.freeze({\n  element: null,\n  opacity: 0.4,\n  zindex: -1,\n  autocreate: false,\n});\n\n/**\n * Default processing state object.\n *\n * @type {Object}\n */\nexport const DEFAULT_PROCESS = Object.freeze({\n  touches: [],\n  istouchactive: null,\n  istouchpointactive: null,\n  istouchdirectionactive: null,\n  time: {\n    start: 0,\n    end: 0,\n  },\n});\n\n/**\n * Touch event list.\n *\n * @type {string[]}\n */\nexport const TOUCH_EVENTS = [\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/const.js","'use strict';\n\nimport {PREFIX} from './const';\nimport {isarray, ucfirst} from './util';\n\nconst dom = window.document.createElement('div');\n\nlet currentid = 0;\nlet validstylename = {};\n\n/**\n * Generate ID.\n *\n * @return {number} ID.\n */\nexport function generateid() {\n  return ++currentid;\n}\n\n/**\n * Verify that the style is present.\n *\n * @param {string[]|string} styles Css styles.\n * @return {boolean} Result of verification.\n */\nexport function hasstyle(styles) {\n  let ss = styles;\n\n  if (!isarray(styles)) {\n    ss = [styles];\n  }\n\n  for (let style of ss) {\n    if (typeof dom.style[style] !== 'undefined') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Set the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {Object} style Css style.\n */\nexport function setstyle(element, style) {\n  for (let name of Object.keys(style)) {\n    let vsn = validstylename[name];\n\n    if (vsn) {\n      element.style[vsn] = style[name];\n    } else if (typeof element.style[name] === 'undefined') {\n      for (let i = 0; i < 2; i++) {\n        for (let pfx of PREFIX) {\n          let namewithprefix = (i === 0 ? pfx : ucfirst(pfx)) +\n            ucfirst(name);\n\n          if (typeof element.style[namewithprefix] !== 'undefined') {\n            validstylename[name] = namewithprefix;\n            element.style[namewithprefix] = style[name];\n            break;\n          }\n        }\n      }\n    } else {\n      validstylename[name] = name;\n      element.style[name] = style[name];\n    }\n  }\n}\n\n/**\n * Unset the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {string[]|string} styles Css styles.\n */\nexport function unsetstyle(element, styles) {\n  let style = {};\n\n  for (let name of isarray(styles) ? styles : [styles]) {\n    style[name] = '';\n  }\n\n  setstyle(element, style);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/helper.js","'use strict';\n\n/**\n * Convert the first letter to uppercase.\n *\n * @param {string} str Target character string.\n * @return {string} Converted string.\n */\nexport function ucfirst(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Whether or not the object is an array.\n *\n * @param {any} obj Target object.\n * @return {boolean} Returns true if object is an Array.\n */\nexport function isarray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js","'use strict';\n\nimport {hasstyle} from './helper';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nlet sup = {};\n\nsup.transform3d = hasstyle([\n  'perspectiveProperty',\n  'webkitPerspective',\n  'mozPerspective',\n  'oPerspective',\n  'msPerspective',\n]);\n\nsup.transform = hasstyle([\n  'transformProperty',\n  'webkitTransform',\n  'mozTransform',\n  'oTransform',\n  'msTransform',\n]);\n\nsup.transition = hasstyle([\n  'transitionProperty',\n  'webkitTransitionProperty',\n  'mozTransitionProperty',\n  'oTransitionProperty',\n  'msTransitionProperty',\n]);\n\nsup.cssanim = (sup.transform3d || sup.transform) &&\n  sup.transition;\n\nsup.transrate = sup.transform3d ?\n  'translate3d' :\n  'translate';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nexport const support = Object.freeze(sup);\n\n\n\n// WEBPACK FOOTER //\n// ./src/support.js","'use strict';\n\nimport {\n  DEFAULT_DRAWER_PROPERTY,\n  DEFAULT_OVERLAY_PROPERTY,\n  DEFAULT_PROCESS,\n  DRAWER_STYLE,\n  OVERLAY_STYLE,\n  TOUCH_EVENTS,\n  TRANSITION_STYLE,\n} from './const';\n\nimport {isarray} from './util';\nimport * as helper from './helper';\nimport {support} from './support';\n\n/**\n * Class providing a drawer function.\n *\n * @public\n * @class\n * @example\n * var drawer = new Highendrawer({\n *   element: document.getElementById('drawer')\n * });\n */\nexport default class Highendrawer {\n\n  /**\n   * Initialize object.\n   *\n   * @constructor\n   * @param {Drawer} drawer Initial parameters of drawer.\n   */\n  constructor(drawer) {\n    /**\n     * Drawer status ('open' or 'close')\n     *\n     * @public\n     * @type {string}\n     */\n    this.state = 'close';\n\n    this._id = helper.generateid();\n    this._drawer = Object.assign({}, DEFAULT_DRAWER_PROPERTY, drawer);\n    this._overlay = this._drawer.overlay === false ?\n      false :\n      Object.assign({}, DEFAULT_OVERLAY_PROPERTY, this._drawer.overlay);\n    this._timeoutid = null;\n    this._intervalid = null;\n    this._process = Object.assign({}, DEFAULT_PROCESS);\n    this._enabled = false;\n    this._handler = this._getdrawerhandler();\n\n    if (this._drawer.enabledmaxwidth > -1) {\n      window.addEventListener('resize', () => {\n        if (this._enabled\n          && window.innerWidth > this._drawer.enabledmaxwidth) {\n          this.destroy();\n        } else if (!this._enabled\n          && window.innerWidth <= this._drawer.enabledmaxwidth) {\n          this.create();\n        }\n      });\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      window.history.replaceState({\n        id: this._id,\n      }, null, null);\n    }\n\n    if (this._drawer.initcreate) {\n      this.create();\n    }\n  }\n\n  /**\n   * Create the drawer set.\n   *\n   * @public\n   */\n  create() {\n    try {\n      this._createdrawer();\n      this._createoverlay();\n      this._enabled = true;\n\n      if (this._drawer.oncreate) {\n        this._drawer.oncreate.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Destroy the drawer set.\n   *\n   * @public\n   */\n  destroy() {\n    try {\n      this._destroydrawer();\n      this._destroyoverlay();\n      this._enabled = false;\n\n      if (this._drawer.ondestroy) {\n        this._drawer.ondestroy.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Open drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for open.\n   */\n  open(duration = null, isfireevent = true, ischangehistory = true) {\n    return this._changestate(\n      0,\n      duration,\n      {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onopen : null,\n        fail: isfireevent ? this._drawer.onerror : null,\n      },\n      ischangehistory\n    );\n  }\n\n  /**\n   * Close drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for close.\n   */\n  close(duration = null, isfireevent = true, ischangehistory = true) {\n    return this._changestate(\n      this._getminposition(),\n      duration,\n      {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onclose : null,\n        fail: isfireevent ? this._drawer.onerror : null,\n      },\n      ischangehistory\n    );\n  }\n\n  /**\n   * Toggle drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for toggle.\n   */\n  toggle(duration = null, isfireevent = true, ischangehistory = true) {\n    return new Promise((resolve, reject) => {\n      try {\n        this[this.state === 'open' ? 'close' : 'open'](duration, isfireevent, ischangehistory)\n          .then(resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Create drawer.\n   */\n  _createdrawer() {\n    helper.setstyle(\n      this._drawer.element,\n      Object.assign(\n        {},\n        DRAWER_STYLE,\n        support.cssanim ? TRANSITION_STYLE : {}\n      )\n    );\n\n    this._resetdrawer();\n\n    Object.keys(this._handler).forEach((name) => {\n      window.addEventListener(name, this._handler[name]);\n    });\n  }\n\n  /**\n   * Destroy drawer.\n   */\n  _destroydrawer() {\n    Object.keys(this._handler).forEach((name) => {\n      window.removeEventListener(name, this._handler[name]);\n    });\n\n    this._resetdrawer(true);\n\n    helper.unsetstyle(\n      this._drawer.element,\n      Object.keys(\n        Object.assign(\n          {},\n          DRAWER_STYLE,\n          support.cssanim ? TRANSITION_STYLE : {}\n        )\n      )\n    );\n  }\n\n  /**\n   * Create overlay.\n   */\n  _createoverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.zindex === -1) {\n      this._overlay.zindex = this._drawer.zindex - 1;\n    }\n\n    if (!this._overlay.element) {\n      this._overlay.element = window.document.createElement('div');\n      this._overlay.isautocreated = true;\n\n      helper.setstyle(\n        this._overlay.element,\n        Object.assign(\n          {},\n          OVERLAY_STYLE,\n          support.cssanim ? TRANSITION_STYLE : {}\n        )\n      );\n    }\n\n    if (!this._overlay.touchhandler) {\n      this._overlay.touchhandler = (e) => {\n        this.close();\n      };\n    }\n\n    window.document.body.appendChild(this._overlay.element);\n  }\n\n  /**\n   * Destroy overlay.\n   */\n  _destroyoverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.element) {\n      this._overlay.element.removeEventListener('click', this._overlay.touchhandler);\n\n      if (this._overlay.isautocreated) {\n        this._overlay.element.parentNode.removeChild(this._overlay.element);\n      }\n    }\n  }\n\n  /**\n   * Reset drawer.\n   *\n   * @param {boolean} [isunset] Unset style.\n   */\n  _resetdrawer(isunset = false) {\n    try {\n      this._setprops();\n\n      let ims = this._getinitdrawerstyle();\n\n      if (isunset) {\n        helper.unsetstyle(this._drawer.element, Object.keys(ims));\n      } else {\n        helper.setstyle(this._drawer.element, ims);\n      }\n    } catch (e) {\n      if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Show drawer.\n   */\n  _showdrawer() {\n    helper.setstyle(this._drawer.element, {\n      zIndex: this._drawer.zindex,\n      opacity: 1,\n    });\n  }\n\n  /**\n   * Hide drawer.\n   */\n  _hidedrawer() {\n    helper.setstyle(this._drawer.element, {\n      zIndex: -1,\n      opacity: 0,\n    });\n  }\n\n  /**\n   * Show overlay.\n   */\n  _showoverlay() {\n    helper.setstyle(this._overlay.element, {\n      zIndex: this._overlay.zindex,\n      display: 'block',\n    });\n  }\n\n  /**\n   * Hide overlay.\n   */\n  _hideoverlay() {\n    helper.setstyle(this._overlay.element, {\n      zIndex: -1,\n      display: 'none',\n    });\n  }\n\n  /**\n   * Set properties.\n   */\n  _setprops() {\n    // set sizepixel\n    let sizepixel = this._normalizepixel(\n      this._drawer.size\n    );\n\n    if (this._drawer.maxsize && this._drawer.maxsize !== -1) {\n      let maxsizepixel = this._normalizepixel(\n        this._drawer.maxsize\n      );\n\n      if (sizepixel > maxsizepixel) {\n        sizepixel = maxsizepixel;\n      }\n    }\n\n    this._sizepixel = sizepixel;\n\n    // set position\n    this._position = typeof this._position === 'undefined' ?\n      null :\n      this._position;\n  }\n\n  /**\n   * Return initial style of drawer.\n   *\n   * @return {Object} Style for drawer.\n   */\n  _getinitdrawerstyle() {\n    let style = null;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        style = {\n          width: '100%',\n          height: `${this._sizepixel}px`,\n          top: `-${this._sizepixel}px`,\n          right: 'auto',\n          bottom: 'auto',\n          left: 0,\n        };\n        break;\n      case 'right':\n        style = {\n          width: `${this._sizepixel}px`,\n          height: '100%',\n          top: 0,\n          right: `-${this._sizepixel}px`,\n          bottom: 'auto',\n          left: 'auto',\n        };\n        break;\n      case 'bottom':\n        style = {\n          width: '100%',\n          height: `${this._sizepixel}px`,\n          top: 'auto',\n          right: 'auto',\n          bottom: `-${this._sizepixel}px`,\n          left: 0,\n        };\n        break;\n      case 'left':\n        style = {\n          width: `${this._sizepixel}px`,\n          height: '100%',\n          top: 0,\n          right: 'auto',\n          bottom: 'auto',\n          left: `-${this._sizepixel}px`,\n        };\n        break;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n\n    return Object.assign(style, this._drawer.style || {});\n  }\n\n  /**\n   * Return style for moving the drawer.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for drawer.\n   */\n  _getdrawerstyle(position, duration = null) {\n    let minp = this._getminposition(this._drawer);\n    let style = {};\n\n    if (support.cssanim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n\n      switch (this._drawer.direction) {\n        case 'top':\n          style.transform = `${support.transrate}(0,${-(minp - position)}px,0)`;\n          break;\n        case 'right':\n          style.transform = `${support.transrate}(${minp - position}px,0,0)`;\n          break;\n        case 'bottom':\n          style.transform = `${support.transrate}(0,${minp - position}px,0)`;\n          break;\n        case 'left':\n          style.transform = `${support.transrate}(${-(minp - position)}px,0,0)`;\n          break;\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    } else {\n      style[this._drawer.direction] = `${position}px`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Return style for moving the overlay.\n   *\n   * @param {float} opacity Overlay opacity.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for overlay.\n   */\n  _getoverlaystyle(opacity, duration = null) {\n    let style = {\n      opacity,\n    };\n\n    if (support.cssanim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Make animation with CSS3.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _cssanimate(duration) {\n    helper.setstyle(\n      this._overlay.element,\n      this._getoverlaystyle(\n        this._getoverlayopacityfromposition(this._position),\n        duration\n      )\n    );\n\n    helper.setstyle(\n      this._drawer.element,\n      this._getdrawerstyle(this._position, duration)\n    );\n  }\n\n  /**\n   * Make animation with Javascript.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _jsanimate(duration) {\n    let start = +new Date();\n    let fromopy = this._getoverlayopacityfromstyle();\n    let toopy = this._getoverlayopacityfromposition(this._position);\n    let frompos = this._getdrawerpositionfromstyle();\n    let topos = this._position;\n\n    if (this._intervalid) {\n      clearInterval(this._intervalid);\n    }\n\n    this._intervalid = setInterval(() => {\n      let time = new Date() - start;\n      let nowpos = null;\n      let nowopy = null;\n\n      if (time > duration) {\n        clearInterval(this._intervalid);\n        this._intervalid = null;\n        nowopy = toopy;\n        nowpos = topos;\n      } else {\n        let prp = (time /= duration) * (time - 2);\n        nowopy = fromopy - ((toopy - fromopy) * prp);\n        nowpos = frompos - ((topos - frompos) * prp);\n      }\n\n      helper.setstyle(\n        this._overlay.element,\n        this._getoverlaystyle(nowopy, duration)\n      );\n\n      helper.setstyle(\n        this._drawer.element,\n        this._getdrawerstyle(nowpos, duration)\n      );\n    }, 10);\n  }\n\n  /**\n   * Return state by touch movement.\n   *\n   * @return {string} State by touch movement.\n   */\n  _gettouchmovestate() {\n    if (this._process.time.end - this._process.time.start <= 300) {\n      let len = this._process.touches.length;\n      let moveinfo = this._gettouchmoveinfo(\n        this._process.touches[len - 2],\n        this._process.touches[len - 1]\n      );\n      let vertical = moveinfo.axis === 'vertical';\n      let horizontal = moveinfo.axis === 'horizontal';\n      let top = this._drawer.direction === 'top' && moveinfo.y >= 0;\n      let right = this._drawer.direction === 'right' && moveinfo.x < 0;\n      let bottom = this._drawer.direction === 'bottom' && moveinfo.y < 0;\n      let left = this._drawer.direction === 'left' && moveinfo.x >= 0;\n\n      return (vertical && (bottom || top)) ||\n        (horizontal && (right || left)) ?\n        'open' :\n        'close';\n    }\n\n    return this._getstatefromposition();\n  }\n\n  /**\n   * Return drawer event handler.\n   *\n   * @return {Object} Drawer event handler.\n   */\n  _getdrawerhandler() {\n    let handler = {};\n\n    handler.resize = () => {\n      this._resetdrawer();\n      this[this.state](0, false, false);\n\n      if (this._drawer.onresize) {\n        this._drawer.onresize.apply(\n          this,\n          [this._drawer]\n        );\n      }\n    };\n\n    if (this._drawer.swipeable) {\n      for (let event of TOUCH_EVENTS) {\n        handler[event] = this._touchhandler.bind(this);\n      }\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      handler.popstate = (e) => {\n        if (e.state && e.state.id === this._id && this.state === 'open') {\n          this.close(null, true, false);\n        }\n      };\n    }\n\n    return handler;\n  }\n\n  /**\n   * Touch event handler.\n   *\n   * @param {Event} ev Touch event object.\n   * @return {boolean} Event bubbling.\n   */\n  _touchhandler(ev) {\n    try {\n      if (ev.touches.length > 1) {\n        return true;\n      }\n\n      let touch = ev.touches[0];\n\n      if (touch) {\n        this._process.touches.push(touch);\n      }\n\n      switch (ev.type) {\n        case 'touchstart':\n          this._ontouchstart(ev);\n          break;\n        case 'touchmove':\n          this._ontouchmove(ev);\n          break;\n        case 'touchcancel':\n        case 'touchend':\n          this._ontouchfinish(ev);\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Touch start event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchstart(ev) {\n    this._process.time.start = new Date().getTime();\n  }\n\n  /**\n   * Touch move event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchmove(ev) {\n    let len = this._process.touches.length;\n\n    if (len < 2) {\n      return;\n    }\n\n    if (!this._process.istouchpointactive) {\n      this._process.istouchpointactive = this._istouchpointactive();\n    }\n\n    if (!this._process.istouchpointactive) {\n      return;\n    }\n\n    if (this._process.istouchdirectionactive === null) {\n      this._process.istouchdirectionactive = this._istouchdirectionactive();\n    }\n\n    if (!this._process.istouchdirectionactive) {\n      return;\n    }\n\n    let isfiretouchstart = false;\n    let istouchactive = this._process.istouchpointactive &&\n        this._process.istouchdirectionactive;\n\n    if (!istouchactive) {\n      return;\n    }\n\n    if (!this._process.istouchactive) {\n      this._process.istouchactive = istouchactive;\n      this._showoverlay();\n      this._showdrawer();\n\n      if (this._drawer.ontouchstart) {\n        isfiretouchstart = true;\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n\n    this._position = this._getdrawerpositionfromtouches(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n\n    if (isfiretouchstart) {\n      this._drawer.ontouchstart.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n\n    helper.setstyle(\n      this._overlay.element,\n      this._getoverlaystyle(\n        this._getoverlayopacityfromposition(this._position),\n        0\n      )\n    );\n\n    helper.setstyle(\n      this._drawer.element,\n      this._getdrawerstyle(this._position, 0)\n    );\n\n    if (this._drawer.ontouchmove) {\n      this._drawer.ontouchmove.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n  }\n\n  /**\n   * Touch finish event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchfinish(ev) {\n    let len = this._process.touches.length;\n\n    if (this._process.istouchactive && len >= 2) {\n      this._process.time.end = new Date().getTime();\n\n      let state = this._gettouchmovestate();\n      let changestate = this.state !== state;\n\n      this[state](null, changestate, changestate);\n\n      if (this._drawer.ontouchfinish) {\n        this._drawer.ontouchfinish.apply(\n          this,\n          [\n            this._drawer,\n            this._getdrawerpositionfromtouches(\n              this._process.touches[len - 2],\n              this._process.touches[len - 1]\n            ),\n          ]\n        );\n      }\n    }\n\n    this._process.touches = [];\n    this._process.istouchactive = null;\n    this._process.istouchpointactive = null;\n    this._process.istouchdirectionactive = null;\n    this._process.time.start = 0;\n    this._process.time.end = 0;\n  }\n\n  /**\n   * Return whether or not a valid touch.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration=null] Drawer moving time.\n   * @param {Object} [callbacks=null] Callback objects.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object.\n   */\n  _changestate(\n    position,\n    duration = null,\n    callbacks = null,\n    ischangehistory = true\n  ) {\n    return this._handlecallback(new Promise((resolve, reject) => {\n      try {\n        this._position = position;\n\n        let du = duration === null ? this._drawer.duration : duration;\n\n        if (this._timeoutid !== null) {\n          clearTimeout(this._timeoutid);\n          this._timeoutid = null;\n        }\n\n        let state = this._getstatefromposition();\n\n        if (state === 'open') {\n          this._showoverlay();\n          this._showdrawer();\n        } else {\n          this._overlay.element.removeEventListener('click', this._overlay.touchhandler);\n        }\n\n        if (ischangehistory\n          && this._drawer.history\n          && window.history\n          && window.history.pushState\n        ) {\n          if (state === 'open') {\n            window.history.pushState({\n              id: this._id,\n            }, null, null);\n          } else {\n            window.history.back();\n          }\n        }\n\n        this[support.cssanim\n          ? '_cssanimate'\n          : '_jsanimate'](du);\n\n        this._timeoutid = setTimeout(\n          () => {\n            if (state === 'open') {\n              this._overlay.element.addEventListener('click', this._overlay.touchhandler);\n            } else {\n              this._hidedrawer();\n              this._hideoverlay();\n            }\n\n            this._timeoutid = null;\n          },\n          du\n        );\n\n        this.state = state;\n\n        if (typeof callbacks === 'object' && callbacks.onchangestate) {\n          callbacks.onchangestate.apply(\n            this,\n            [this._drawer, state]\n          );\n        }\n\n        resolve.apply(this, [this._drawer]);\n      } catch (e) {\n        reject(e);\n      }\n    }), {\n      done: typeof callbacks === 'object' && callbacks.done ? callbacks.done : null,\n      fail: typeof callbacks === 'object' && callbacks.fail ? callbacks.fail : null,\n    });\n  }\n\n  /**\n   * Return whether or not a valid touch point.\n   *\n   * @return {boolean} Result of valid touch point.\n   */\n  _istouchpointactive() {\n    let rg = this._getrange(\n      this.state === 'open' ?\n        this._sizepixel :\n        this._drawer.swipearea\n    );\n    let len = this._process.touches.length;\n\n    return (rg.from.x <= this._process.touches[len - 2].clientX &&\n      this._process.touches[len - 2].clientX <= rg.to.x &&\n      rg.from.y <= this._process.touches[len - 2].clientY &&\n      this._process.touches[len - 2].clientY <= rg.to.y);\n  }\n\n  /**\n   * Return whether or not a valid touch direction.\n   *\n   * @return {boolean} Result of valid touch direction.\n   */\n  _istouchdirectionactive() {\n    let len = this._process.touches.length;\n    let moveinfo = this._gettouchmoveinfo(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n    let vertical = moveinfo.axis === 'vertical';\n    let horizontal = moveinfo.axis === 'horizontal';\n\n    if (!(vertical &&\n      (this._drawer.direction === 'top' ||\n      this._drawer.direction === 'bottom') ||\n      horizontal &&\n      (this._drawer.direction === 'right' ||\n      this._drawer.direction === 'left'))\n    ) {\n      return false;\n    }\n\n    return (\n      (\n        this.state === 'open' &&\n        (\n          this._drawer.direction === 'top' && moveinfo.y < 0 ||\n          this._drawer.direction === 'right' && moveinfo.x >= 0 ||\n          this._drawer.direction === 'bottom' && moveinfo.y >= 0 ||\n          this._drawer.direction === 'left' && moveinfo.x < 0\n        )\n      ) ||\n      (\n        this.state === 'close' &&\n        (\n          this._drawer.direction === 'top' && moveinfo.y >= 0 ||\n          this._drawer.direction === 'right' && moveinfo.x < 0 ||\n          this._drawer.direction === 'bottom' && moveinfo.y < 0 ||\n          this._drawer.direction === 'left' && moveinfo.x >= 0\n        )\n      )\n    );\n  }\n\n  /**\n   * Return the state of the drawer.\n   *\n   * @return {string} State of the drawer.\n   */\n  _getstatefromposition() {\n    let pos = this._position === null ?\n      this._getdrawerpositionfromstyle() :\n      this._position;\n\n    return Math.abs(pos) < this._sizepixel / 2 ?\n      'open' :\n      'close';\n  }\n\n  /**\n   * Return the position of the drawer.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {number} Position of the drawer.\n   */\n  _getdrawerpositionfromtouches(touchbasis, touchlast) {\n    let distance = this._getdistance(\n      this._gettouchmoveinfo(touchbasis, touchlast)\n    );\n\n    let curpos = this._position === null ?\n      this._getdrawerpositionfromstyle() :\n      this._position;\n\n    let pos = Math.round(curpos + distance);\n    let minp = this._getminposition(this._drawer);\n\n    if (pos > 0) {\n      pos = 0;\n    } else if (pos < minp) {\n      pos = minp;\n    }\n\n    return pos;\n  }\n\n  /**\n   * Return the position in the style.\n   *\n   * @return {number} Position in the style.\n   */\n  _getdrawerpositionfromstyle() {\n    let value = this._drawer.element.style[this._drawer.direction];\n    return this._normalizenumber(value).value;\n  }\n\n\n  /**\n   * Return the opacity of the overlay.\n   *\n   * @param {number} position Moving position.\n   * @return {number} Position of the drawer.\n   */\n  _getoverlayopacityfromposition(position) {\n    let minp = this._getminposition(this._drawer);\n    let posratio = 1 - (Math.abs(position) / Math.abs(minp));\n    return ((this._overlay.opacity * posratio) * 10000) / 10000;\n  }\n\n  /**\n   * Return the opacity in the style.\n   *\n   * @return {number} Opacity in the style.\n   */\n  _getoverlayopacityfromstyle() {\n    return parseFloat(this._overlay.element.style.opacity);\n  }\n\n  /**\n   * Return the swipe range.\n   *\n   * @param {string|number} value Target swipe area value.\n   * @return {Object} Drag range.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getrange(value) {\n    let basis = this._convertpixelabs(value);\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        return {from: {x: 0, y: 0}, to: {x: width, y: basis}};\n      case 'right':\n        return {from: {x: basis, y: 0}, to: {x: width, y: height}};\n      case 'bottom':\n        return {from: {x: 0, y: basis}, to: {x: width, y: height}};\n      case 'left':\n        return {from: {x: 0, y: 0}, to: {x: basis, y: height}};\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return a value converted to the absolute value of the pixel.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Converted to the absolute value of the pixel.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _convertpixelabs(value) {\n    let nvalue = this._normalizepixel(value);\n\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'left':\n        return nvalue;\n      case 'right':\n        return window.innerWidth - nvalue;\n      case 'bottom':\n        return window.innerHeight - nvalue;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the normalized pixel value.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Normalized pixel value.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _normalizepixel(value) {\n    let normalized = this._normalizenumber(value);\n\n    if (normalized.unit === 'number' || normalized.unit === 'pixel') {\n      return normalized.value;\n    } else if (normalized.unit === 'percent') {\n      switch (this._drawer.direction) {\n        case 'top':\n        case 'bottom':\n          return window.innerHeight * (normalized.value / 100);\n        case 'right':\n        case 'left':\n          return window.innerWidth * (normalized.value / 100);\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    }\n  }\n\n  /**\n   * Return the numeric normalized information.\n   *\n   * @param {string|number} value Target value.\n   * @return {Object} Numeric normalized information.\n   * @throws {Error} Is thrown if value is invalid.\n   */\n  _normalizenumber(value) {\n    if (typeof value === 'number') {\n      return {value: value, unit: 'number'};\n    } else if (String(value).match(/^[.\\-0-9]+$/)) {\n      return {value: Number(value), unit: 'number'};\n    } else if (value.match(/^[.\\-0-9]+px$/)) {\n      return {value: Number(value.replace(/px$/ig, '')), unit: 'pixel'};\n    } else if (value.match(/[.\\-0-9]+%$/)) {\n      return {value: Number(value.replace(/%$/ig, '')), unit: 'percent'};\n    }\n\n    throw new Error(`'${value}' does not support`);\n  }\n\n  /**\n   * Return to the minimum position for the drawer.\n   *\n   * @return {number} Minimum position for the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getminposition() {\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'bottom':\n        return -1 * this._drawer.element.offsetHeight;\n      case 'right':\n      case 'left':\n        return -1 * this._drawer.element.offsetWidth;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the distance of the drawer.\n   *\n   * @param {Object} moveinfo Movement information of the drawer.\n   * @return {number} Distance of the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getdistance(moveinfo) {\n    switch (this._drawer.direction) {\n      case 'top':\n        return moveinfo.y;\n      case 'right':\n        return -1 * moveinfo.x;\n      case 'bottom':\n        return -1 * moveinfo.y;\n      case 'left':\n        return moveinfo.x;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {Object} Movement distance of the x, y direction, movement direction.\n   */\n  _gettouchmoveinfo(touchbasis, touchlast) {\n    let x = touchlast.clientX - touchbasis.clientX;\n    let y = touchlast.clientY - touchbasis.clientY;\n    let axis = Math.abs(x) >= Math.abs(y) ? 'horizontal' : 'vertical';\n\n    return {x, y, axis};\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Promise} promise Promise instance.\n   * @param {Object} callbacks Callback function with the key to 'done', 'fail', 'always' (each optional).\n   * @return {Promise} Promise instance.\n   */\n  _handlecallback(promise, callbacks) {\n    if (!callbacks) {\n      return promise;\n    }\n\n    for (let key of Object.keys(callbacks)) {\n      let callback = callbacks[key];\n\n      if (!callback) {\n        continue;\n      }\n\n      let cb = isarray(callback) ? callback : [callback];\n      let rcb = null;\n\n      switch (key) {\n        case 'done':\n          rcb = (prom, value) => prom.then(value.bind(this));\n          break;\n        case 'fail':\n          rcb = (prom, value) => prom.catch(value.bind(this));\n          break;\n        case 'always':\n          rcb = (prom, value) => prom.then(value.bind(this), value.bind(this));\n          break;\n        default:\n          break;\n      }\n\n      if (rcb) {\n        cb.reduce(rcb, promise);\n      }\n    }\n\n    return promise;\n  }\n}\n\nmodule.exports = Highendrawer;\n\n\n\n// WEBPACK FOOTER //\n// ./src/highendrawer.js"],"sourceRoot":""}