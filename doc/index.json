[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/const.js",
    "content": "/**\n * Vendor prefix list.\n *\n * @type {string[]}\n */\nexport const PREFIX = ['webkit', 'moz', 'o', 'ms'];\n\n/**\n * Drawer's default css style.\n *\n * @type {Object}\n */\nexport const DRAWER_STYLE = Object.freeze({\n  display: 'block',\n  position: 'fixed',\n  overflowX: 'hidden',\n  overflowY: 'auto',\n  zIndex: -1,\n  opacity: 0,\n  webkitOverflowScrolling: 'touch',\n});\n\n/**\n * Overlay's default css style.\n *\n * @type {Object}\n */\nexport const OVERLAY_STYLE = Object.freeze({\n  display: 'none',\n  backgroundColor: '#000',\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: -1,\n  opacity: 0,\n});\n\n/**\n * Css transition style.\n *\n * @type {Object}\n */\nexport const TRANSITION_STYLE = Object.freeze({\n  transform: '',\n  transitionProperty: 'transform,opacity',\n  transitionTimingFunction: 'cubic-bezier(0, 0.8, 0.95, 1)',\n  transitionDuration: '0ms',\n});\n\n/**\n * Default drawer property.\n *\n * @type {Drawer}\n */\nexport const DEFAULT_DRAWER_PROPERTY = Object.freeze({\n  element: null,\n  direction: 'right',\n  size: '80%',\n  maxSize: -1,\n  swipeable: true,\n  swipeArea: 20,\n  duration: 400,\n  zIndex: 9999,\n  style: {},\n  initCreate: true,\n  enabledMaxWidth: -1,\n  history: true,\n  overlay: null,\n  onCreate: null,\n  onDestroy: null,\n  onOpen: null,\n  onClose: null,\n  onChangeState: null,\n  onResize: null,\n  onTouchStart: null,\n  onTouchMove: null,\n  onTouchFinish: null,\n  onError: null,\n});\n\n/**\n * Default overlay property.\n *\n * @type {Overlay}\n */\nexport const DEFAULT_OVERLAY_PROPERTY = Object.freeze({\n  element: null,\n  opacity: 0.6,\n  zIndex: -1,\n  autoCreate: false,\n});\n\n/**\n * Default processing state object.\n *\n * @type {Object}\n */\nexport const DEFAULT_PROCESS = Object.freeze({\n  touches: [],\n  isTouchActive: null,\n  isTouchPointActive: null,\n  isTouchDirectionActive: null,\n  time: {\n    start: 0,\n    end: 0,\n  },\n});\n\n/**\n * Touch event list.\n *\n * @type {string[]}\n */\nexport const TOUCH_EVENTS = [\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n];\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/const.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "PREFIX",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~PREFIX",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{PREFIX}",
    "description": "Vendor prefix list.",
    "lineNumber": 6,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "DRAWER_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DRAWER_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DRAWER_STYLE}",
    "description": "Drawer's default css style.",
    "lineNumber": 13,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "OVERLAY_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~OVERLAY_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{OVERLAY_STYLE}",
    "description": "Overlay's default css style.",
    "lineNumber": 28,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "TRANSITION_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~TRANSITION_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{TRANSITION_STYLE}",
    "description": "Css transition style.",
    "lineNumber": 45,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "DEFAULT_DRAWER_PROPERTY",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_DRAWER_PROPERTY",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_DRAWER_PROPERTY}",
    "description": "Default drawer property.",
    "lineNumber": 57,
    "type": {
      "nullable": null,
      "types": [
        "Drawer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "DEFAULT_OVERLAY_PROPERTY",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_OVERLAY_PROPERTY",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_OVERLAY_PROPERTY}",
    "description": "Default overlay property.",
    "lineNumber": 88,
    "type": {
      "nullable": null,
      "types": [
        "Overlay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "DEFAULT_PROCESS",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_PROCESS",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_PROCESS}",
    "description": "Default processing state object.",
    "lineNumber": 100,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "TOUCH_EVENTS",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~TOUCH_EVENTS",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{TOUCH_EVENTS}",
    "description": "Touch event list.",
    "lineNumber": 116,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/helper.js",
    "content": "import {PREFIX} from './const';\nimport {isArray, ucFirst} from './util';\n\nconst dom = window.document.createElement('div');\nconst validStyleName = {};\nlet currentId = 0;\n\n// Feature detection for method 'preventDefault' of event.\nlet supportsPassive = false;\n\ntry {\n  const opts = Object.defineProperty({}, 'passive', {\n    get: () => {\n      supportsPassive = true;\n    },\n  });\n\n  window.addEventListener('supportsPassiveTestEvent', null, opts);\n} catch (e) {}\n\n/**\n * Generate ID.\n *\n * @return {number} ID.\n */\nexport function generateId() {\n  return ++currentId;\n}\n\n/**\n * Verify that the style is present.\n *\n * @param {string[]|string} styles Css styles.\n * @return {boolean} Result of verification.\n */\nexport function hasStyle(styles) {\n  const ss = isArray(styles) ? styles : [styles];\n\n  for (let style of ss) {\n    if (typeof dom.style[style] !== 'undefined') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Set the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {Object} style Css style.\n */\nexport function setStyle(element, style) {\n  for (let name of Object.keys(style)) {\n    const vsn = validStyleName[name];\n\n    if (vsn) {\n      element.style[vsn] = style[name];\n    } else if (typeof element.style[name] === 'undefined') {\n      for (let i = 0; i < 2; i++) {\n        for (let pfx of PREFIX) {\n          const nwp = (i === 0 ? pfx : ucFirst(pfx)) +\n            ucFirst(name);\n\n          if (typeof element.style[nwp] !== 'undefined') {\n            validStyleName[name] = nwp;\n            element.style[nwp] = style[name];\n            break;\n          }\n        }\n      }\n    } else {\n      validStyleName[name] = name;\n      element.style[name] = style[name];\n    }\n  }\n}\n\n/**\n * Unset the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {string[]|string} styles Css styles.\n */\nexport function unsetStyle(element, styles) {\n  const style = {};\n\n  for (let name of isArray(styles) ? styles : [styles]) {\n    style[name] = '';\n  }\n\n  setStyle(element, style);\n}\n\n/**\n * Validate HTMLElement.\n *\n * @param {*} obj HTMLElement to be verified.\n * @return {boolean} Result of valid HTMLElement.\n */\nexport function isHTMLElement(obj) {\n  try {\n    return obj instanceof HTMLElement;\n  } catch (e) {\n    return (typeof obj === 'object') &&\n      (obj.nodeType === 1) &&\n      (typeof obj.style === 'object') &&\n      (typeof obj.ownerDocument === 'object');\n  }\n}\n\n/**\n * Add event listener with options.\n *\n * @param {Object} target Target object.\n * @param {string} type Event type.\n * @param {function} handler Event handler.\n * @param {Object} [options={}] Event options.\n */\nexport function addEventListenerWithOptions(\n  target, type, handler, options = {}\n) {\n  const optionsOrCapture = Object.assign({\n    passive: true,\n    capture: false,\n  }, options);\n\n  target.addEventListener(type, handler, supportsPassive ?\n    optionsOrCapture :\n    optionsOrCapture.capture\n  );\n}\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/helper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "dom",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~dom",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 4,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "validStyleName",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~validStyleName",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "currentId",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~currentId",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "variable",
    "name": "supportsPassive",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~supportsPassive",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "generateId",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~generateId",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{generateId}",
    "description": "Generate ID.",
    "lineNumber": 26,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "ID."
    },
    "params": []
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "hasStyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~hasStyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{hasStyle}",
    "description": "Verify that the style is present.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styles",
        "description": "Css styles."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of verification."
    }
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "setStyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~setStyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{setStyle}",
    "description": "Set the CSS style to element.",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Target element object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "Css style."
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "unsetStyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~unsetStyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{unsetStyle}",
    "description": "Unset the CSS style to element.",
    "lineNumber": 86,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Target element object."
      },
      {
        "nullable": null,
        "types": [
          "string[]",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styles",
        "description": "Css styles."
      }
    ],
    "return": null
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "isHTMLElement",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~isHTMLElement",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{isHTMLElement}",
    "description": "Validate HTMLElement.",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "HTMLElement to be verified."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid HTMLElement."
    }
  },
  {
    "__docId__": 67,
    "kind": "function",
    "name": "addEventListenerWithOptions",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~addEventListenerWithOptions",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{addEventListenerWithOptions}",
    "description": "Add event listener with options.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "target",
        "description": "Target object."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "type",
        "description": "Event type."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "handler",
        "description": "Event handler."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "Event options."
      }
    ],
    "return": null
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/highendrawer.js",
    "content": "import {\n  DEFAULT_DRAWER_PROPERTY,\n  DEFAULT_OVERLAY_PROPERTY,\n  DEFAULT_PROCESS,\n  DRAWER_STYLE,\n  OVERLAY_STYLE,\n  TOUCH_EVENTS,\n  TRANSITION_STYLE,\n} from './const';\n\nimport {isArray} from './util';\nimport * as helper from './helper';\nimport {support} from './support';\n\n/**\n * Class providing a drawer function.\n *\n * @public\n * @class\n * @example\n * var drawer = new Highendrawer({\n *   element: document.getElementById('drawer')\n * });\n */\nexport default class Highendrawer {\n  /**\n   * Initialize object.\n   *\n   * @constructor\n   * @param {Drawer} drawer Initial parameters of drawer.\n   */\n  constructor(drawer) {\n    /**\n     * Drawer status ('open' or 'close')\n     *\n     * @public\n     * @type {string}\n     */\n    this.state = 'close';\n\n    this._id = helper.generateId();\n    this._drawer = Object.assign({}, DEFAULT_DRAWER_PROPERTY, drawer);\n    this._overlay = this._drawer.overlay === false ?\n      false :\n      Object.assign({}, DEFAULT_OVERLAY_PROPERTY, this._drawer.overlay);\n    this._timeoutId = null;\n    this._intervalId = null;\n    this._process = Object.assign({}, DEFAULT_PROCESS);\n    this._enabled = false;\n    this._handler = this._getDrawerHandler();\n\n    if (!this._drawer.element) {\n      throw new Error(`'element' is required.`);\n    }\n\n    if (!helper.isHTMLElement(this._drawer.element)) {\n      throw new Error(`Invalid HTMLElement specified for 'element'.`);\n    }\n\n    if (this._drawer.enabledMaxWidth > -1) {\n      helper.addEventListenerWithOptions(window, 'resize', () => {\n        if (this._enabled\n          && window.innerWidth > this._drawer.enabledMaxWidth) {\n          this.destroy();\n        } else if (!this._enabled\n          && window.innerWidth <= this._drawer.enabledMaxWidth) {\n          this.create();\n        }\n      });\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      window.history.replaceState({\n        id: this._id,\n      }, null, null);\n    }\n\n    if (this._drawer.initCreate\n      && (this._drawer.enabledMaxWidth < 0\n        || window.innerWidth <= this._drawer.enabledMaxWidth)\n    ) {\n      this.create();\n    }\n  }\n\n  /**\n   * Create the drawer set.\n   *\n   * @public\n   */\n  create() {\n    try {\n      this._createDrawer();\n      this._createOverlay();\n      this._enabled = true;\n\n      if (this._drawer.onCreate) {\n        this._drawer.onCreate.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onError && typeof this._drawer.onError === 'function') {\n        this._drawer.onError.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Destroy the drawer set.\n   *\n   * @public\n   */\n  destroy() {\n    try {\n      if (this.state === 'open') {\n        this.close(0, true, true);\n      }\n\n      this._destroyDrawer();\n      this._destroyOverlay();\n      this._enabled = false;\n\n      if (this._drawer.onDestroy) {\n        this._drawer.onDestroy.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onError && typeof this._drawer.onError === 'function') {\n        this._drawer.onError.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Open drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isFireEvent] Whether to fire an event on the drawer.\n   * @param {boolean} [isChangeHistory=false] Make a change in history.\n   * @return {Promise} Promise object for open.\n   */\n  open(duration = null, isFireEvent = true, isChangeHistory = true) {\n    return this._changeState(\n      0,\n      duration,\n      {\n        onChangeState: isFireEvent ? this._drawer.onChangeState : null,\n        done: isFireEvent ? this._drawer.onOpen : null,\n        fail: isFireEvent ? this._drawer.onError : null,\n      },\n      isChangeHistory\n    );\n  }\n\n  /**\n   * Close drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isFireEvent] Whether to fire an event on the drawer.\n   * @param {boolean} [isChangeHistory=false] Make a change in history.\n   * @return {Promise} Promise object for close.\n   */\n  close(duration = null, isFireEvent = true, isChangeHistory = true) {\n    return this._changeState(\n      this._getMinPosition(),\n      duration,\n      {\n        onChangeState: isFireEvent ? this._drawer.onChangeState : null,\n        done: isFireEvent ? this._drawer.onClose : null,\n        fail: isFireEvent ? this._drawer.onError : null,\n      },\n      isChangeHistory\n    );\n  }\n\n  /**\n   * Toggle drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isFireEvent] Whether to fire an event on the drawer.\n   * @param {boolean} [isChangeHistory=false] Make a change in history.\n   * @return {Promise} Promise object for toggle.\n   */\n  toggle(duration = null, isFireEvent = true, isChangeHistory = true) {\n    return new Promise((resolve, reject) => {\n      try {\n        this[this.state === 'open' ? 'close' : 'open'](duration, isFireEvent, isChangeHistory)\n          .then(resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Create drawer.\n   */\n  _createDrawer() {\n    helper.setStyle(\n      this._drawer.element,\n      Object.assign(\n        {},\n        DRAWER_STYLE,\n        support.cssAnim ? TRANSITION_STYLE : {}\n      )\n    );\n\n    this._resetDrawer();\n\n    Object.keys(this._handler).forEach((name) => {\n      helper.addEventListenerWithOptions(window, name, this._handler[name], {\n        passive: name !== 'touchmove',\n      });\n    });\n  }\n\n  /**\n   * Destroy drawer.\n   */\n  _destroyDrawer() {\n    Object.keys(this._handler).forEach((name) => {\n      window.removeEventListener(name, this._handler[name]);\n    });\n\n    this._resetDrawer(true);\n\n    helper.unsetStyle(\n      this._drawer.element,\n      Object.keys(\n        Object.assign(\n          {},\n          DRAWER_STYLE,\n          support.cssAnim ? TRANSITION_STYLE : {}\n        )\n      )\n    );\n  }\n\n  /**\n   * Create overlay.\n   */\n  _createOverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.zIndex === -1) {\n      this._overlay.zIndex = this._drawer.zIndex - 1;\n    }\n\n    if (!this._overlay.element) {\n      this._overlay.element = window.document.createElement('div');\n      this._overlay.autoCreated = true;\n\n      helper.setStyle(\n        this._overlay.element,\n        Object.assign(\n          {},\n          OVERLAY_STYLE,\n          support.cssAnim ? TRANSITION_STYLE : {}\n        )\n      );\n    }\n\n    if (!this._overlay.touchHandler) {\n      this._overlay.touchHandler = (e) => {\n        this.close();\n      };\n    }\n\n    window.document.body.appendChild(this._overlay.element);\n  }\n\n  /**\n   * Destroy overlay.\n   */\n  _destroyOverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.element) {\n      this._overlay.element.removeEventListener('click', this._overlay.touchHandler);\n\n      if (this._overlay.autoCreated) {\n        this._overlay.element.parentNode.removeChild(this._overlay.element);\n      }\n    }\n  }\n\n  /**\n   * Reset drawer.\n   *\n   * @param {boolean} [isUnset] Unset style.\n   */\n  _resetDrawer(isUnset = false) {\n    try {\n      this._setProps();\n\n      const ims = this._getInitDrawerStyle();\n\n      if (isUnset) {\n        helper.unsetStyle(this._drawer.element, Object.keys(ims));\n      } else {\n        helper.setStyle(this._drawer.element, ims);\n      }\n    } catch (e) {\n      if (this._drawer.onError && typeof this._drawer.onError === 'function') {\n        this._drawer.onError.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Show drawer.\n   */\n  _showDrawer() {\n    helper.setStyle(this._drawer.element, {\n      zIndex: this._drawer.zIndex,\n      opacity: 1,\n    });\n  }\n\n  /**\n   * Hide drawer.\n   */\n  _hideDrawer() {\n    helper.setStyle(this._drawer.element, {\n      zIndex: -1,\n      opacity: 0,\n    });\n  }\n\n  /**\n   * Show overlay.\n   */\n  _showOverlay() {\n    helper.setStyle(this._overlay.element, {\n      zIndex: this._overlay.zIndex,\n      display: 'block',\n    });\n  }\n\n  /**\n   * Hide overlay.\n   */\n  _hideOverlay() {\n    helper.setStyle(this._overlay.element, {\n      zIndex: -1,\n      display: 'none',\n    });\n  }\n\n  /**\n   * Set properties.\n   */\n  _setProps() {\n    // set sizePixel\n    let sizePixel = this._normalizePixel(\n      this._drawer.size\n    );\n\n    if (this._drawer.maxSize && this._drawer.maxSize !== -1) {\n      let maxSizePixel = this._normalizePixel(\n        this._drawer.maxSize\n      );\n\n      if (sizePixel > maxSizePixel) {\n        sizePixel = maxSizePixel;\n      }\n    }\n\n    this._sizePixel = sizePixel;\n\n    // set position\n    this._position = typeof this._position === 'undefined' ?\n      null :\n      this._position;\n  }\n\n  /**\n   * Return initial style of drawer.\n   *\n   * @return {Object} Style for drawer.\n   */\n  _getInitDrawerStyle() {\n    let style = null;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        style = {\n          width: '100%',\n          height: `${this._sizePixel}px`,\n          top: `-${this._sizePixel}px`,\n          right: 'auto',\n          bottom: 'auto',\n          left: 0,\n        };\n        break;\n      case 'right':\n        style = {\n          width: `${this._sizePixel}px`,\n          height: '100%',\n          top: 0,\n          right: `-${this._sizePixel}px`,\n          bottom: 'auto',\n          left: 'auto',\n        };\n        break;\n      case 'bottom':\n        style = {\n          width: '100%',\n          height: `${this._sizePixel}px`,\n          top: 'auto',\n          right: 'auto',\n          bottom: `-${this._sizePixel}px`,\n          left: 0,\n        };\n        break;\n      case 'left':\n        style = {\n          width: `${this._sizePixel}px`,\n          height: '100%',\n          top: 0,\n          right: 'auto',\n          bottom: 'auto',\n          left: `-${this._sizePixel}px`,\n        };\n        break;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n\n    return Object.assign(style, this._drawer.style || {});\n  }\n\n  /**\n   * Return style for moving the drawer.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for drawer.\n   */\n  _getDrawerStyle(position, duration = null) {\n    const minp = this._getMinPosition(this._drawer);\n    const style = {};\n\n    if (support.cssAnim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n\n      switch (this._drawer.direction) {\n        case 'top':\n          style.transform = `${support.transrate}(0,${-(minp - position)}px,0)`;\n          break;\n        case 'right':\n          style.transform = `${support.transrate}(${minp - position}px,0,0)`;\n          break;\n        case 'bottom':\n          style.transform = `${support.transrate}(0,${minp - position}px,0)`;\n          break;\n        case 'left':\n          style.transform = `${support.transrate}(${-(minp - position)}px,0,0)`;\n          break;\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    } else {\n      style[this._drawer.direction] = `${position}px`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Return style for moving the overlay.\n   *\n   * @param {float} opacity Overlay opacity.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for overlay.\n   */\n  _getOverlayStyle(opacity, duration = null) {\n    const style = {\n      opacity,\n    };\n\n    if (support.cssAnim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Change overlay state.\n   *\n   * @param {string} state Drawer status ('open' or 'close')\n   */\n  _changeOverlayState(state) {\n    if (state === 'open') {\n      helper.addEventListenerWithOptions(this._overlay.element, 'click', this._overlay.touchHandler);\n    } else {\n      this._hideDrawer();\n      this._hideOverlay();\n    }\n  }\n\n  /**\n   * Make animation with CSS3.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _cssAnimate(duration) {\n    helper.setStyle(\n      this._overlay.element,\n      this._getOverlayStyle(\n        this._getOverlayOpacityFromPosition(this._position),\n        duration\n      )\n    );\n\n    helper.setStyle(\n      this._drawer.element,\n      this._getDrawerStyle(this._position, duration)\n    );\n  }\n\n  /**\n   * Make animation with Javascript.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _jsAnimate(duration) {\n    const start = +new Date();\n    const fromOpy = this._getOverlayOpacityFromStyle();\n    const toOpy = this._getOverlayOpacityFromPosition(this._position);\n    const fromPos = this._getDrawerPositionFromStyle();\n    const toPos = this._position;\n\n    if (this._intervalId) {\n      clearInterval(this._intervalId);\n    }\n\n    this._intervalId = setInterval(() => {\n      let time = new Date() - start;\n      let nowPos = null;\n      let nowOpy = null;\n\n      if (time > duration) {\n        clearInterval(this._intervalId);\n        this._intervalId = null;\n        nowOpy = toOpy;\n        nowPos = toPos;\n      } else {\n        const prp = (time /= duration) * (time - 2);\n        nowOpy = fromOpy - ((toOpy - fromOpy) * prp);\n        nowPos = fromPos - ((toPos - fromPos) * prp);\n      }\n\n      helper.setStyle(\n        this._overlay.element,\n        this._getOverlayStyle(nowOpy, duration)\n      );\n\n      helper.setStyle(\n        this._drawer.element,\n        this._getDrawerStyle(nowPos, duration)\n      );\n    }, 10);\n  }\n\n  /**\n   * Return state by touch movement.\n   *\n   * @return {string} State by touch movement.\n   */\n  _getTouchMoveState() {\n    if (this._process.time.end - this._process.time.start <= 300) {\n      const len = this._process.touches.length;\n      const moveInfo = this._getTouchMoveInfo(\n        this._process.touches[len - 2],\n        this._process.touches[len - 1]\n      );\n      const vertical = moveInfo.axis === 'vertical';\n      const horizontal = moveInfo.axis === 'horizontal';\n      const top = this._drawer.direction === 'top' && moveInfo.y >= 0;\n      const right = this._drawer.direction === 'right' && moveInfo.x < 0;\n      const bottom = this._drawer.direction === 'bottom' && moveInfo.y < 0;\n      const left = this._drawer.direction === 'left' && moveInfo.x >= 0;\n\n      return (vertical && (bottom || top)) ||\n        (horizontal && (right || left)) ?\n        'open' :\n        'close';\n    }\n\n    return this._getStateFromPosition();\n  }\n\n  /**\n   * Return drawer event handler.\n   *\n   * @return {Object} Drawer event handler.\n   */\n  _getDrawerHandler() {\n    const handler = {};\n\n    handler.resize = () => {\n      this._resetDrawer();\n      this[this.state](0, false, false);\n\n      if (this._drawer.onResize) {\n        this._drawer.onResize.apply(\n          this,\n          [this._drawer]\n        );\n      }\n    };\n\n    if (this._drawer.swipeable) {\n      for (let event of TOUCH_EVENTS) {\n        handler[event] = this._touchHandler.bind(this);\n      }\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      handler.popstate = (e) => {\n        if (e.state && e.state.id === this._id && this.state === 'open') {\n          this.close(null, true, false);\n        }\n      };\n    }\n\n    return handler;\n  }\n\n  /**\n   * Touch event handler.\n   *\n   * @param {Event} ev Touch event object.\n   * @return {boolean} Event bubbling.\n   */\n  _touchHandler(ev) {\n    try {\n      if (ev.touches.length > 1) {\n        return true;\n      }\n\n      let touch = ev.touches[0];\n\n      if (touch) {\n        this._process.touches.push(touch);\n      }\n\n      switch (ev.type) {\n        case 'touchstart':\n          this._onTouchStart(ev);\n          break;\n        case 'touchmove':\n          this._onTouchMove(ev);\n          break;\n        case 'touchcancel':\n        case 'touchend':\n          this._onTouchFinish(ev);\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      if (this._drawer.onError && typeof this._drawer.onError === 'function') {\n        this._drawer.onError.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Touch start event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _onTouchStart(ev) {\n    this._process.time.start = new Date().getTime();\n  }\n\n  /**\n   * Touch move event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _onTouchMove(ev) {\n    const len = this._process.touches.length;\n\n    if (len < 2) {\n      return;\n    }\n\n    if (!this._process.isTouchPointActive) {\n      this._process.isTouchPointActive = this._isTouchPointActive();\n    }\n\n    if (!this._process.isTouchPointActive) {\n      return;\n    }\n\n    if (this._process.isTouchDirectionActive === null) {\n      this._process.isTouchDirectionActive = this._isTouchDirectionActive();\n    }\n\n    if (!this._process.isTouchDirectionActive) {\n      return;\n    }\n\n    let isFireTouchStart = false;\n    const isTouchActive = this._process.isTouchPointActive &&\n        this._process.isTouchDirectionActive;\n\n    if (!isTouchActive) {\n      return;\n    }\n\n    if (!this._process.isTouchActive) {\n      this._process.isTouchActive = isTouchActive;\n      this._showOverlay();\n      this._showDrawer();\n\n      if (this._drawer.onTouchStart) {\n        isFireTouchStart = true;\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n\n    this._position = this._getDrawerPositionFromTouches(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n\n    if (isFireTouchStart) {\n      this._drawer.onTouchStart.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n\n    helper.setStyle(\n      this._overlay.element,\n      this._getOverlayStyle(\n        this._getOverlayOpacityFromPosition(this._position),\n        0\n      )\n    );\n\n    helper.setStyle(\n      this._drawer.element,\n      this._getDrawerStyle(this._position, 0)\n    );\n\n    if (this._drawer.onTouchMove) {\n      this._drawer.onTouchMove.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n  }\n\n  /**\n   * Touch finish event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _onTouchFinish(ev) {\n    const len = this._process.touches.length;\n\n    if (this._process.isTouchActive && len >= 2) {\n      this._process.time.end = new Date().getTime();\n\n      const state = this._getTouchMoveState();\n      const changeState = this.state !== state;\n\n      this[state](null, changeState, changeState);\n\n      if (this._drawer.onTouchFinish) {\n        this._drawer.onTouchFinish.apply(\n          this,\n          [\n            this._drawer,\n            this._getDrawerPositionFromTouches(\n              this._process.touches[len - 2],\n              this._process.touches[len - 1]\n            ),\n          ]\n        );\n      }\n    }\n\n    this._process.touches = [];\n    this._process.isTouchActive = null;\n    this._process.isTouchPointActive = null;\n    this._process.isTouchDirectionActive = null;\n    this._process.time.start = 0;\n    this._process.time.end = 0;\n  }\n\n  /**\n   * Return whether or not a valid touch.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration=null] Drawer moving time.\n   * @param {Object} [callbacks=null] Callback objects.\n   * @param {boolean} [isChangeHistory=false] Make a change in history.\n   * @return {Promise} Promise object.\n   */\n  _changeState(\n    position,\n    duration = null,\n    callbacks = null,\n    isChangeHistory = true\n  ) {\n    return this._handleCallback(new Promise((resolve, reject) => {\n      try {\n        if (!this._enabled) {\n          throw new Error('Drawer is disabled.');\n        }\n\n        this._position = position;\n\n        const du = duration === null ? this._drawer.duration : duration;\n\n        if (this._timeoutId !== null) {\n          clearTimeout(this._timeoutId);\n          this._timeoutId = null;\n        }\n\n        const state = this._getStateFromPosition();\n\n        if (state === 'open') {\n          this._showOverlay();\n          this._showDrawer();\n        } else {\n          this._overlay.element.removeEventListener('click', this._overlay.touchHandler);\n        }\n\n        if (isChangeHistory\n          && this._drawer.history\n          && window.history\n          && window.history.pushState\n        ) {\n          if (state === 'open') {\n            window.history.pushState({\n              id: this._id,\n            }, null, null);\n          } else {\n            window.history.back();\n          }\n        }\n\n        this[support.cssAnim\n          ? '_cssAnimate'\n          : '_jsAnimate'](du);\n\n        if (du > 0) {\n          this._timeoutId = setTimeout(\n            () => {\n              this._changeOverlayState(state);\n              this._timeoutId = null;\n            },\n            du\n          );\n        } else {\n          this._changeOverlayState(state);\n        }\n\n        this.state = state;\n\n        if (typeof callbacks === 'object' && callbacks.onChangeState) {\n          callbacks.onChangeState.apply(\n            this,\n            [this._drawer, state]\n          );\n        }\n\n        resolve.apply(this, [this._drawer]);\n      } catch (e) {\n        reject(e);\n      }\n    }), {\n      done: typeof callbacks === 'object' && callbacks.done ? callbacks.done : null,\n      fail: typeof callbacks === 'object' && callbacks.fail ? callbacks.fail : null,\n    });\n  }\n\n  /**\n   * Return whether or not a valid touch point.\n   *\n   * @return {boolean} Result of valid touch point.\n   */\n  _isTouchPointActive() {\n    const rg = this._getRange(\n      this.state === 'open' ?\n        this._sizePixel :\n        this._drawer.swipeArea\n    );\n    const len = this._process.touches.length;\n\n    return (rg.from.x <= this._process.touches[len - 2].clientX &&\n      this._process.touches[len - 2].clientX <= rg.to.x &&\n      rg.from.y <= this._process.touches[len - 2].clientY &&\n      this._process.touches[len - 2].clientY <= rg.to.y);\n  }\n\n  /**\n   * Return whether or not a valid touch direction.\n   *\n   * @return {boolean} Result of valid touch direction.\n   */\n  _isTouchDirectionActive() {\n    const len = this._process.touches.length;\n    const moveInfo = this._getTouchMoveInfo(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n    const vertical = moveInfo.axis === 'vertical';\n    const horizontal = moveInfo.axis === 'horizontal';\n\n    if (!(vertical &&\n      (this._drawer.direction === 'top' ||\n      this._drawer.direction === 'bottom') ||\n      horizontal &&\n      (this._drawer.direction === 'right' ||\n      this._drawer.direction === 'left'))\n    ) {\n      return false;\n    }\n\n    return (\n      (\n        this.state === 'open' &&\n        (\n          this._drawer.direction === 'top' && moveInfo.y < 0 ||\n          this._drawer.direction === 'right' && moveInfo.x >= 0 ||\n          this._drawer.direction === 'bottom' && moveInfo.y >= 0 ||\n          this._drawer.direction === 'left' && moveInfo.x < 0\n        )\n      ) ||\n      (\n        this.state === 'close' &&\n        (\n          this._drawer.direction === 'top' && moveInfo.y >= 0 ||\n          this._drawer.direction === 'right' && moveInfo.x < 0 ||\n          this._drawer.direction === 'bottom' && moveInfo.y < 0 ||\n          this._drawer.direction === 'left' && moveInfo.x >= 0\n        )\n      )\n    );\n  }\n\n  /**\n   * Return the state of the drawer.\n   *\n   * @return {string} State of the drawer.\n   */\n  _getStateFromPosition() {\n    const pos = this._position === null ?\n      this._getDrawerPositionFromStyle() :\n      this._position;\n\n    return Math.abs(pos) < this._sizePixel / 2 ?\n      'open' :\n      'close';\n  }\n\n  /**\n   * Return the position of the drawer.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {number} Position of the drawer.\n   */\n  _getDrawerPositionFromTouches(touchbasis, touchlast) {\n    const distance = this._getDistance(\n      this._getTouchMoveInfo(touchbasis, touchlast)\n    );\n    const curpos = this._position === null ?\n      this._getDrawerPositionFromStyle() :\n      this._position;\n    const minp = this._getMinPosition(this._drawer);\n    let pos = Math.round(curpos + distance);\n\n    if (pos > 0) {\n      pos = 0;\n    } else if (pos < minp) {\n      pos = minp;\n    }\n\n    return pos;\n  }\n\n  /**\n   * Return the position in the style.\n   *\n   * @return {number} Position in the style.\n   */\n  _getDrawerPositionFromStyle() {\n    const value = this._drawer.element.style[this._drawer.direction];\n    return this._normalizeNumber(value).value;\n  }\n\n  /**\n   * Return the opacity of the overlay.\n   *\n   * @param {number} position Moving position.\n   * @return {number} Position of the drawer.\n   */\n  _getOverlayOpacityFromPosition(position) {\n    const minp = this._getMinPosition(this._drawer);\n    const posRatio = 1 - (Math.abs(position) / Math.abs(minp));\n    return ((this._overlay.opacity * posRatio) * 10000) / 10000;\n  }\n\n  /**\n   * Return the opacity in the style.\n   *\n   * @return {number} Opacity in the style.\n   */\n  _getOverlayOpacityFromStyle() {\n    return parseFloat(this._overlay.element.style.opacity);\n  }\n\n  /**\n   * Return the swipe range.\n   *\n   * @param {string|number} value Target swipe area value.\n   * @return {Object} Drag range.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getRange(value) {\n    const basis = this._convertPixelAbs(value);\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        return {from: {x: 0, y: 0}, to: {x: width, y: basis}};\n      case 'right':\n        return {from: {x: basis, y: 0}, to: {x: width, y: height}};\n      case 'bottom':\n        return {from: {x: 0, y: basis}, to: {x: width, y: height}};\n      case 'left':\n        return {from: {x: 0, y: 0}, to: {x: basis, y: height}};\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return a value converted to the absolute value of the pixel.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Converted to the absolute value of the pixel.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _convertPixelAbs(value) {\n    const nValue = this._normalizePixel(value);\n\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'left':\n        return nValue;\n      case 'right':\n        return window.innerWidth - nValue;\n      case 'bottom':\n        return window.innerHeight - nValue;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the normalized pixel value.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Normalized pixel value.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _normalizePixel(value) {\n    const nValue = this._normalizeNumber(value);\n\n    if (nValue.unit === 'number' || nValue.unit === 'pixel') {\n      return nValue.value;\n    } else if (nValue.unit === 'percent') {\n      switch (this._drawer.direction) {\n        case 'top':\n        case 'bottom':\n          return window.innerHeight * (nValue.value / 100);\n        case 'right':\n        case 'left':\n          return window.innerWidth * (nValue.value / 100);\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    }\n  }\n\n  /**\n   * Return the numeric normalized information.\n   *\n   * @param {string|number} value Target value.\n   * @return {Object} Numeric normalized information.\n   * @throws {Error} Is thrown if value is invalid.\n   */\n  _normalizeNumber(value) {\n    if (typeof value === 'number') {\n      return {value: value, unit: 'number'};\n    } else if (String(value).match(/^[.\\-0-9]+$/)) {\n      return {value: Number(value), unit: 'number'};\n    } else if (value.match(/^[.\\-0-9]+px$/)) {\n      return {value: Number(value.replace(/px$/ig, '')), unit: 'pixel'};\n    } else if (value.match(/[.\\-0-9]+%$/)) {\n      return {value: Number(value.replace(/%$/ig, '')), unit: 'percent'};\n    }\n\n    throw new Error(`'${value}' does not support`);\n  }\n\n  /**\n   * Return to the minimum position for the drawer.\n   *\n   * @return {number} Minimum position for the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getMinPosition() {\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'bottom':\n        return -1 * this._drawer.element.offsetHeight;\n      case 'right':\n      case 'left':\n        return -1 * this._drawer.element.offsetWidth;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the distance of the drawer.\n   *\n   * @param {Object} moveInfo Movement information of the drawer.\n   * @return {number} Distance of the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getDistance(moveInfo) {\n    switch (this._drawer.direction) {\n      case 'top':\n        return moveInfo.y;\n      case 'right':\n        return -1 * moveInfo.x;\n      case 'bottom':\n        return -1 * moveInfo.y;\n      case 'left':\n        return moveInfo.x;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {Object} Movement distance of the x, y direction, movement direction.\n   */\n  _getTouchMoveInfo(touchbasis, touchlast) {\n    const x = touchlast.clientX - touchbasis.clientX;\n    const y = touchlast.clientY - touchbasis.clientY;\n    const axis = Math.abs(x) >= Math.abs(y) ? 'horizontal' : 'vertical';\n    return {x, y, axis};\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Promise} promise Promise instance.\n   * @param {Object} callbacks Callback function with the key to 'done', 'fail', 'always' (each optional).\n   * @return {Promise} Promise instance.\n   */\n  _handleCallback(promise, callbacks) {\n    if (!callbacks) {\n      return promise;\n    }\n\n    for (let key of Object.keys(callbacks)) {\n      const callback = callbacks[key];\n\n      if (!callback) {\n        continue;\n      }\n\n      const cb = isArray(callback) ? callback : [callback];\n      const rcb = null;\n\n      switch (key) {\n        case 'done':\n          rcb = (prom, value) => prom.then(value.bind(this));\n          break;\n        case 'fail':\n          rcb = (prom, value) => prom.catch(value.bind(this));\n          break;\n        case 'always':\n          rcb = (prom, value) => prom.then(value.bind(this), value.bind(this));\n          break;\n        default:\n          break;\n      }\n\n      if (rcb) {\n        cb.reduce(rcb, promise);\n      }\n    }\n\n    return promise;\n  }\n}\n\nmodule.exports = Highendrawer;\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/highendrawer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "class",
    "name": "Highendrawer",
    "memberof": "src/highendrawer.js",
    "static": true,
    "longname": "src/highendrawer.js~Highendrawer",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/highendrawer.js",
    "importStyle": "Highendrawer",
    "description": "Class providing a drawer function.",
    "examples": [
      "var drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});"
    ],
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 70,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#constructor",
    "access": "public",
    "description": "Initialize object.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Drawer"
        ],
        "spread": false,
        "optional": false,
        "name": "drawer",
        "description": "Initial parameters of drawer."
      }
    ]
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "state",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#state",
    "access": "public",
    "description": "Drawer status ('open' or 'close')",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "_id",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_id",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_drawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_drawer",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_overlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_overlay",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "_timeoutId",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_timeoutId",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_intervalId",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_intervalId",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "member",
    "name": "_process",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_process",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "member",
    "name": "_enabled",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_enabled",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 79,
    "kind": "member",
    "name": "_handler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_handler",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 80,
    "kind": "method",
    "name": "create",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#create",
    "access": "public",
    "description": "Create the drawer set.",
    "lineNumber": 94,
    "params": [],
    "return": null
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#destroy",
    "access": "public",
    "description": "Destroy the drawer set.",
    "lineNumber": 117,
    "params": [],
    "return": null
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "open",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#open",
    "access": "public",
    "description": "Open drawer.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isFireEvent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "isChangeHistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for open."
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "close",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#close",
    "access": "public",
    "description": "Close drawer.",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isFireEvent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "isChangeHistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for close."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#toggle",
    "access": "public",
    "description": "Toggle drawer.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isFireEvent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "isChangeHistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for toggle."
    }
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "_createDrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_createDrawer",
    "access": "private",
    "description": "Create drawer.",
    "lineNumber": 206,
    "params": [],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "_destroyDrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_destroyDrawer",
    "access": "private",
    "description": "Destroy drawer.",
    "lineNumber": 228,
    "params": [],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "_createOverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_createOverlay",
    "access": "private",
    "description": "Create overlay.",
    "lineNumber": 250,
    "params": [],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "_destroyOverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_destroyOverlay",
    "access": "private",
    "description": "Destroy overlay.",
    "lineNumber": 285,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "_resetDrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_resetDrawer",
    "access": "private",
    "description": "Reset drawer.",
    "lineNumber": 304,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isUnset",
        "description": "Unset style."
      }
    ],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "_showDrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_showDrawer",
    "access": "private",
    "description": "Show drawer.",
    "lineNumber": 327,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "_hideDrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_hideDrawer",
    "access": "private",
    "description": "Hide drawer.",
    "lineNumber": 337,
    "params": [],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "_showOverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_showOverlay",
    "access": "private",
    "description": "Show overlay.",
    "lineNumber": 347,
    "params": [],
    "return": null
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "_hideOverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_hideOverlay",
    "access": "private",
    "description": "Hide overlay.",
    "lineNumber": 357,
    "params": [],
    "return": null
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "_setProps",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_setProps",
    "access": "private",
    "description": "Set properties.",
    "lineNumber": 367,
    "params": [],
    "return": null
  },
  {
    "__docId__": 97,
    "kind": "member",
    "name": "_sizePixel",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_sizePixel",
    "access": "private",
    "description": null,
    "lineNumber": 383,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 98,
    "kind": "member",
    "name": "_position",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_position",
    "access": "private",
    "description": null,
    "lineNumber": 386,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "_getInitDrawerStyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getInitDrawerStyle",
    "access": "private",
    "description": "Return initial style of drawer.",
    "lineNumber": 396,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Style for drawer."
    },
    "params": []
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "_getDrawerStyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getDrawerStyle",
    "access": "private",
    "description": "Return style for moving the drawer.",
    "lineNumber": 454,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Move style for drawer."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "_getOverlayStyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getOverlayStyle",
    "access": "private",
    "description": "Return style for moving the overlay.",
    "lineNumber": 491,
    "params": [
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "Overlay opacity."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Move style for overlay."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "_changeOverlayState",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_changeOverlayState",
    "access": "private",
    "description": "Change overlay state.",
    "lineNumber": 508,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "Drawer status ('open' or 'close')"
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_cssAnimate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_cssAnimate",
    "access": "private",
    "description": "Make animation with CSS3.",
    "lineNumber": 522,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": null
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "_jsAnimate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_jsAnimate",
    "access": "private",
    "description": "Make animation with Javascript.",
    "lineNumber": 542,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "_getTouchMoveState",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getTouchMoveState",
    "access": "private",
    "description": "Return state by touch movement.",
    "lineNumber": 586,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "State by touch movement."
    },
    "params": []
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "_getDrawerHandler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getDrawerHandler",
    "access": "private",
    "description": "Return drawer event handler.",
    "lineNumber": 614,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Drawer event handler."
    },
    "params": []
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_touchHandler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_touchHandler",
    "access": "private",
    "description": "Touch event handler.",
    "lineNumber": 655,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Event bubbling."
    }
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "_onTouchStart",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_onTouchStart",
    "access": "private",
    "description": "Touch start event handler.",
    "lineNumber": 697,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 111,
    "kind": "method",
    "name": "_onTouchMove",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_onTouchMove",
    "access": "private",
    "description": "Touch move event handler.",
    "lineNumber": 706,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "_onTouchFinish",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_onTouchFinish",
    "access": "private",
    "description": "Touch finish event handler.",
    "lineNumber": 788,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "_changeState",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_changeState",
    "access": "private",
    "description": "Return whether or not a valid touch.",
    "lineNumber": 830,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "callbacks",
        "description": "Callback objects."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "isChangeHistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "_isTouchPointActive",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_isTouchPointActive",
    "access": "private",
    "description": "Return whether or not a valid touch point.",
    "lineNumber": 914,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid touch point."
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "_isTouchDirectionActive",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_isTouchDirectionActive",
    "access": "private",
    "description": "Return whether or not a valid touch direction.",
    "lineNumber": 933,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid touch direction."
    },
    "params": []
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "_getStateFromPosition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getStateFromPosition",
    "access": "private",
    "description": "Return the state of the drawer.",
    "lineNumber": 979,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "State of the drawer."
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "_getDrawerPositionFromTouches",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getDrawerPositionFromTouches",
    "access": "private",
    "description": "Return the position of the drawer.",
    "lineNumber": 996,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchbasis",
        "description": "Basic touch information."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchlast",
        "description": "Last touch information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position of the drawer."
    }
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "_getDrawerPositionFromStyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getDrawerPositionFromStyle",
    "access": "private",
    "description": "Return the position in the style.",
    "lineNumber": 1020,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position in the style."
    },
    "params": []
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "_getOverlayOpacityFromPosition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getOverlayOpacityFromPosition",
    "access": "private",
    "description": "Return the opacity of the overlay.",
    "lineNumber": 1031,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position of the drawer."
    }
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "_getOverlayOpacityFromStyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getOverlayOpacityFromStyle",
    "access": "private",
    "description": "Return the opacity in the style.",
    "lineNumber": 1042,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Opacity in the style."
    },
    "params": []
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "_getRange",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getRange",
    "access": "private",
    "description": "Return the swipe range.",
    "lineNumber": 1053,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target swipe area value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Drag range."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_convertPixelAbs",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_convertPixelAbs",
    "access": "private",
    "description": "Return a value converted to the absolute value of the pixel.",
    "lineNumber": 1079,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Converted to the absolute value of the pixel."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "_normalizePixel",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_normalizePixel",
    "access": "private",
    "description": "Return the normalized pixel value.",
    "lineNumber": 1102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Normalized pixel value."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "_normalizeNumber",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_normalizeNumber",
    "access": "private",
    "description": "Return the numeric normalized information.",
    "lineNumber": 1128,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Numeric normalized information."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if value is invalid."
      }
    ]
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "_getMinPosition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getMinPosition",
    "access": "private",
    "description": "Return to the minimum position for the drawer.",
    "lineNumber": 1148,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Minimum position for the drawer."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ],
    "params": []
  },
  {
    "__docId__": 132,
    "kind": "method",
    "name": "_getDistance",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getDistance",
    "access": "private",
    "description": "Return the distance of the drawer.",
    "lineNumber": 1168,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "moveInfo",
        "description": "Movement information of the drawer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Distance of the drawer."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "_getTouchMoveInfo",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getTouchMoveInfo",
    "access": "private",
    "description": "Return the information of touch move.",
    "lineNumber": 1190,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchbasis",
        "description": "Basic touch information."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchlast",
        "description": "Last touch information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Movement distance of the x, y direction, movement direction."
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "_handleCallback",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_handleCallback",
    "access": "private",
    "description": "Return the information of touch move.",
    "lineNumber": 1204,
    "params": [
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "promise",
        "description": "Promise instance."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "Callback function with the key to 'done', 'fail', 'always' (each optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise instance."
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/support.js",
    "content": "import {hasStyle} from './helper';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nconst sup = {};\n\nsup.transform3d = hasStyle([\n  'perspectiveProperty',\n  'webkitPerspective',\n  'mozPerspective',\n  'oPerspective',\n  'msPerspective',\n]);\n\nsup.transform = hasStyle([\n  'transformProperty',\n  'webkitTransform',\n  'mozTransform',\n  'oTransform',\n  'msTransform',\n]);\n\nsup.transition = hasStyle([\n  'transitionProperty',\n  'webkitTransitionProperty',\n  'mozTransitionProperty',\n  'oTransitionProperty',\n  'msTransitionProperty',\n]);\n\nsup.cssAnim = (sup.transform3d || sup.transform) &&\n  sup.transition;\n\nsup.transrate = sup.transform3d ?\n  'translate3d' :\n  'translate';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nexport const support = Object.freeze(sup);\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/support.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "variable",
    "name": "sup",
    "memberof": "src/support.js",
    "static": true,
    "longname": "src/support.js~sup",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/support.js",
    "importStyle": null,
    "description": "Browser support information.",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 137,
    "kind": "variable",
    "name": "support",
    "memberof": "src/support.js",
    "static": true,
    "longname": "src/support.js~support",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/support.js",
    "importStyle": "{support}",
    "description": "Browser support information.",
    "lineNumber": 46,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/typedef.js",
    "content": "/**\n * Drawer object.\n *\n * @typedef {Object} Drawer\n * @property {!Object} element HTML DOM Element.\n * @property {string} [direction=\"right\"] Drawer placement direction.\n * @property {string|number} [size=\"80%\"] Drawer size. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {string|number} [maxSize=-1] Drawer max size. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {boolean} [swipeable=true] Enable opening and closing of the drawer with a swipe gesture.\n * @property {string|number} [swipeArea=20] Swipeable area. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {number} [duration=400] Drawer moving time.\n * @property {number} [zIndex=9999] Drawer stacking order.\n * @property {Object} [style={}] Drawer's css style.\n * @property {boolean} [initCreate=true] Create a drawer at initialization.\n * @property {number} [enabledMaxWidth=-1] Maximum screen width with drawer enabled. Always valid when -1.\n * @property {boolean} [history=true] Activate if history is supported.\n * @property {Overlay} [overlay=null] Overlay object. If not specified, it will be created automatically. Specify false if it is unnecessary.\n * @property {function} [onCreate=null] Called when a drawer is created.\n * @property {function} [onDestroy=null] Called when a drawer is destroyed.\n * @property {function} [onOpen=null] Called when a drawer is opened.\n * @property {function} [onClose=null] Called when a drawer is closed.\n * @property {function} [onChangeState=null] Called when the opening / closing state is changed.\n * @property {function} [onResize=null] Called when the size of the drawer has changed.\n * @property {function} [onTouchStart=null] Called when the drawer starts moving with a swipe gesture.\n * @property {function} [onTouchMove=null] Called when the drawer is moving with a swipe gesture.\n * @property {function} [onTouchFinish=null] Called when the drawer has finished moving with a swipe gesture.\n * @property {function} [onError=null] Called when there is an error in processing within the object.\n */\n\n/**\n * Overlay object.\n *\n * @typedef {Object} Overlay\n * @property {Object} element HTML DOM Element.\n * @property {number} [opacity=0.6] Overlay object transparency.\n * @property {number} [zIndex=-1] Overlay stacking order. If -1, zIndex - 1 of the drawer is specified automatically.\n */\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/typedef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "typedef",
    "name": "Drawer",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~Drawer",
    "access": "public",
    "description": "Drawer object.",
    "properties": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "HTML DOM Element."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"right\"",
        "defaultRaw": "right",
        "name": "direction",
        "description": "Drawer placement direction."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"80%\"",
        "defaultRaw": "80%",
        "name": "size",
        "description": "Drawer size. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "maxSize",
        "description": "Drawer max size. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "swipeable",
        "description": "Enable opening and closing of the drawer with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "20",
        "defaultRaw": 20,
        "name": "swipeArea",
        "description": "Swipeable area. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "9999",
        "defaultRaw": 9999,
        "name": "zIndex",
        "description": "Drawer stacking order."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "style",
        "description": "Drawer's css style."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "initCreate",
        "description": "Create a drawer at initialization."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "enabledMaxWidth",
        "description": "Maximum screen width with drawer enabled. Always valid when -1."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "history",
        "description": "Activate if history is supported."
      },
      {
        "nullable": null,
        "types": [
          "Overlay"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "overlay",
        "description": "Overlay object. If not specified, it will be created automatically. Specify false if it is unnecessary."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onCreate",
        "description": "Called when a drawer is created."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onDestroy",
        "description": "Called when a drawer is destroyed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onOpen",
        "description": "Called when a drawer is opened."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onClose",
        "description": "Called when a drawer is closed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onChangeState",
        "description": "Called when the opening / closing state is changed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onResize",
        "description": "Called when the size of the drawer has changed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onTouchStart",
        "description": "Called when the drawer starts moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onTouchMove",
        "description": "Called when the drawer is moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onTouchFinish",
        "description": "Called when the drawer has finished moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onError",
        "description": "Called when there is an error in processing within the object."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Drawer"
    }
  },
  {
    "__docId__": 140,
    "kind": "typedef",
    "name": "Overlay",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~Overlay",
    "access": "public",
    "description": "Overlay object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "HTML DOM Element."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.6",
        "defaultRaw": 0.6,
        "name": "opacity",
        "description": "Overlay object transparency."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "zIndex",
        "description": "Overlay stacking order. If -1, zIndex - 1 of the drawer is specified automatically."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Overlay"
    }
  },
  {
    "__docId__": 141,
    "kind": "file",
    "name": "src/util.js",
    "content": "/**\n * Convert the first letter to uppercase.\n *\n * @param {string} str Target character string.\n * @return {string} Converted string.\n */\nexport function ucFirst(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Whether or not the object is an array.\n *\n * @param {any} obj Target object.\n * @return {boolean} Returns true if object is an Array.\n */\nexport function isArray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 142,
    "kind": "function",
    "name": "ucFirst",
    "memberof": "src/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~ucFirst",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/util.js",
    "importStyle": "{ucFirst}",
    "description": "Convert the first letter to uppercase.",
    "lineNumber": 7,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Target character string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Converted string."
    }
  },
  {
    "__docId__": 143,
    "kind": "function",
    "name": "isArray",
    "memberof": "src/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~isArray",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/util.js",
    "importStyle": "{isArray}",
    "description": "Whether or not the object is an array.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Target object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true if object is an Array."
    }
  },
  {
    "kind": "index",
    "content": "# Highendrawer\n\n[![Build Status](https://travis-ci.org/ym-aozora/highendrawer.svg?branch=master)](https://travis-ci.org/ym-aozora/highendrawer)\n[![npm version](https://badge.fury.io/js/highendrawer.svg)](https://badge.fury.io/js/highendrawer)\n\nHighendrawer provides javascript and css drawers to your website and applications.\n\n\n## Demo\n\nhttps://ym-aozora.github.io/highendrawer/\n\n\n## Usage\n\n### With ES6/import\n\n```javascript\nimport Highendrawer from 'highendrawer';\n\nlet drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n### With require\n\n```javascript\nconst Highendrawer = require('highendrawer');\n\nlet drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n### With Browser\n\n```html\n<script src=\"dist/highendrawer.js\"></script>\n```\n\n```javascript\nvar drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n\n## Options (constructor)\n\nhttps://ym-aozora.github.io/highendrawer/doc/typedef/index.html#static-typedef-Drawer\n\n\n## API Documentation\n\nhttps://ym-aozora.github.io/highendrawer/doc/class/src/highendrawer.js~Highendrawer.html\n\n\n## Changelog\n\nhttps://github.com/ym-aozora/highendrawer/blob/master/CHANGELOG.md\n\n\n## License\n\n[MIT](https://raw.githubusercontent.com/ym-aozora/highendrawer/master/LICENSE)\n",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"highendrawer\",\n  \"description\": \"Highendrawer provides javascript and css drawers to your website and applications.\",\n  \"version\": \"0.0.16\",\n  \"author\": \"ym-aozora\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ym-aozora/highendrawer/issues\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.2\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"browser-sync\": \"^2.23.6\",\n    \"browser-sync-webpack-plugin\": \"^2.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.18.2\",\n    \"eslint-config-google\": \"^0.9.1\",\n    \"eslint-loader\": \"^2.0.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.0\",\n    \"jasmine-core\": \"^3.1.0\",\n    \"karma\": \"^2.0.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.4.2\",\n    \"karma-jasmine\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-spec-reporter\": \"0.0.32\",\n    \"karma-webpack\": \"^2.0.13\",\n    \"phantomjs-polyfill\": \"0.0.2\",\n    \"webpack\": \"^4.1.1\",\n    \"webpack-cli\": \"^2.0.10\"\n  },\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"homepage\": \"https://github.com/ym-aozora/highendrawer#readme\",\n  \"keywords\": [\n    \"brower\",\n    \"css\",\n    \"drawer\",\n    \"javascript\",\n    \"library\",\n    \"menu\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"dist/highendrawer.min.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ym-aozora/highendrawer.git\"\n  },\n  \"scripts\": {\n    \"build\": \"npm test && npm run-script doc && npm run-script clean && $(npm bin)/webpack\",\n    \"clean\": \"rm -rf ./dist\",\n    \"clean-doc\": \"rm -rf ./doc\",\n    \"clean-report\": \"rm -rf ./report\",\n    \"demo\": \"npm run-script clean && $(npm bin)/webpack -w\",\n    \"dev\": \"npm run-script clean-report && $(npm bin)/karma start\",\n    \"doc\": \"npm run-script clean-doc && $(npm bin)/esdoc\",\n    \"lint\": \"$(npm bin)/eslint ./src\",\n    \"start\": \"npm run-script demo\",\n    \"test\": \"npm run-script clean-report && $(npm bin)/karma start --single-run --browsers PhantomJS\"\n  }\n}\n",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# Changelog\n\n## 0.0.16\n\n* Update variables and properties to upper camel and respond to change of addEventListener.\n* Fix initialization processing when enabledMaxWidth is specified and change default transparency of overlay.\n\n## 0.0.10\n\n* Fix to not interfere with the operation inside the drawer.\n\n\n## 0.0.9\n\n* Improve swipe accuracy.\n\n\n## 0.0.8\n\n* Fix to be able to scroll inside the drawer.\n* Change Property `isswipeable` to `swipeable`.\n* Change Property `isinitcreate` to `initcreate`.\n* Change Property `ishistory` to `history`.\n* Change default value of `maxsize` property to unspecified(-1).\n\n\n## 0.0.4\n\n* Fix history back when touching an overlay element during closed animation.\n\n\n## 0.0.1\n\n* First beta release.\n",
    "static": true,
    "access": "public"
  }
]