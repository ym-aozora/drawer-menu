[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/const.js",
    "content": "'use strict';\n\n/**\n * Vendor prefix list.\n *\n * @type {string[]}\n */\nexport const PREFIX = ['webkit', 'moz', 'o', 'ms'];\n\n/**\n * Drawer's default css style.\n *\n * @type {Object}\n */\nexport const DRAWER_STYLE = Object.freeze({\n  display: 'block',\n  position: 'fixed',\n  overflowX: 'hidden',\n  overflowY: 'auto',\n  zIndex: -1,\n  opacity: 0,\n  webkitOverflowScrolling: 'touch',\n});\n\n/**\n * Overlay's default css style.\n *\n * @type {Object}\n */\nexport const OVERLAY_STYLE = Object.freeze({\n  display: 'none',\n  backgroundColor: '#000',\n  position: 'fixed',\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0,\n  zIndex: -1,\n  opacity: 0,\n});\n\n/**\n * Css transition style.\n *\n * @type {Object}\n */\nexport const TRANSITION_STYLE = Object.freeze({\n  transform: '',\n  transitionProperty: 'transform,opacity',\n  transitionTimingFunction: 'cubic-bezier(0, 0.8, 0.95, 1)',\n  transitionDuration: '0ms',\n});\n\n/**\n * Default drawer property.\n *\n * @type {Drawer}\n */\nexport const DEFAULT_DRAWER_PROPERTY = Object.freeze({\n  element: null,\n  direction: 'right',\n  size: '80%',\n  maxsize: -1,\n  swipeable: true,\n  swipearea: 20,\n  duration: 400,\n  zindex: 9999,\n  style: {},\n  initcreate: true,\n  enabledmaxwidth: -1,\n  history: true,\n  overlay: null,\n  oncreate: null,\n  ondestroy: null,\n  onopen: null,\n  onclose: null,\n  onchangestate: null,\n  onresize: null,\n  ontouchstart: null,\n  ontouchmove: null,\n  ontouchfinish: null,\n  onerror: null,\n});\n\n/**\n * Default overlay property.\n *\n * @type {Overlay}\n */\nexport const DEFAULT_OVERLAY_PROPERTY = Object.freeze({\n  element: null,\n  opacity: 0.6,\n  zindex: -1,\n  autocreate: false,\n});\n\n/**\n * Default processing state object.\n *\n * @type {Object}\n */\nexport const DEFAULT_PROCESS = Object.freeze({\n  touches: [],\n  istouchactive: null,\n  istouchpointactive: null,\n  istouchdirectionactive: null,\n  time: {\n    start: 0,\n    end: 0,\n  },\n});\n\n/**\n * Touch event list.\n *\n * @type {string[]}\n */\nexport const TOUCH_EVENTS = [\n  'touchstart',\n  'touchmove',\n  'touchend',\n  'touchcancel',\n];\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/const.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "variable",
    "name": "PREFIX",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~PREFIX",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{PREFIX}",
    "description": "Vendor prefix list.",
    "lineNumber": 8,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 50,
    "kind": "variable",
    "name": "DRAWER_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DRAWER_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DRAWER_STYLE}",
    "description": "Drawer's default css style.",
    "lineNumber": 15,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "variable",
    "name": "OVERLAY_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~OVERLAY_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{OVERLAY_STYLE}",
    "description": "Overlay's default css style.",
    "lineNumber": 30,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "variable",
    "name": "TRANSITION_STYLE",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~TRANSITION_STYLE",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{TRANSITION_STYLE}",
    "description": "Css transition style.",
    "lineNumber": 47,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 53,
    "kind": "variable",
    "name": "DEFAULT_DRAWER_PROPERTY",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_DRAWER_PROPERTY",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_DRAWER_PROPERTY}",
    "description": "Default drawer property.",
    "lineNumber": 59,
    "type": {
      "nullable": null,
      "types": [
        "Drawer"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 54,
    "kind": "variable",
    "name": "DEFAULT_OVERLAY_PROPERTY",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_OVERLAY_PROPERTY",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_OVERLAY_PROPERTY}",
    "description": "Default overlay property.",
    "lineNumber": 90,
    "type": {
      "nullable": null,
      "types": [
        "Overlay"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "variable",
    "name": "DEFAULT_PROCESS",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~DEFAULT_PROCESS",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{DEFAULT_PROCESS}",
    "description": "Default processing state object.",
    "lineNumber": 102,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "variable",
    "name": "TOUCH_EVENTS",
    "memberof": "src/const.js",
    "static": true,
    "longname": "src/const.js~TOUCH_EVENTS",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/const.js",
    "importStyle": "{TOUCH_EVENTS}",
    "description": "Touch event list.",
    "lineNumber": 118,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "file",
    "name": "src/helper.js",
    "content": "'use strict';\n\nimport {PREFIX} from './const';\nimport {isarray, ucfirst} from './util';\n\nconst dom = window.document.createElement('div');\n\nlet currentid = 0;\nlet validstylename = {};\n\n/**\n * Generate ID.\n *\n * @return {number} ID.\n */\nexport function generateid() {\n  return ++currentid;\n}\n\n/**\n * Verify that the style is present.\n *\n * @param {string[]|string} styles Css styles.\n * @return {boolean} Result of verification.\n */\nexport function hasstyle(styles) {\n  let ss = styles;\n\n  if (!isarray(styles)) {\n    ss = [styles];\n  }\n\n  for (let style of ss) {\n    if (typeof dom.style[style] !== 'undefined') {\n      return true;\n    }\n  }\n\n  return false;\n}\n\n/**\n * Set the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {Object} style Css style.\n */\nexport function setstyle(element, style) {\n  for (let name of Object.keys(style)) {\n    let vsn = validstylename[name];\n\n    if (vsn) {\n      element.style[vsn] = style[name];\n    } else if (typeof element.style[name] === 'undefined') {\n      for (let i = 0; i < 2; i++) {\n        for (let pfx of PREFIX) {\n          let namewithprefix = (i === 0 ? pfx : ucfirst(pfx)) +\n            ucfirst(name);\n\n          if (typeof element.style[namewithprefix] !== 'undefined') {\n            validstylename[name] = namewithprefix;\n            element.style[namewithprefix] = style[name];\n            break;\n          }\n        }\n      }\n    } else {\n      validstylename[name] = name;\n      element.style[name] = style[name];\n    }\n  }\n}\n\n/**\n * Unset the CSS style to element.\n *\n * @param {Object} element Target element object.\n * @param {string[]|string} styles Css styles.\n */\nexport function unsetstyle(element, styles) {\n  let style = {};\n\n  for (let name of isarray(styles) ? styles : [styles]) {\n    style[name] = '';\n  }\n\n  setstyle(element, style);\n}\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/helper.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 58,
    "kind": "variable",
    "name": "dom",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~dom",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 59,
    "kind": "variable",
    "name": "currentid",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~currentid",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 8,
    "undocument": true,
    "type": {
      "types": [
        "number"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 60,
    "kind": "variable",
    "name": "validstylename",
    "memberof": "src/helper.js",
    "static": true,
    "longname": "src/helper.js~validstylename",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 9,
    "undocument": true,
    "type": {
      "types": [
        "{}"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "generateid",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~generateid",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{generateid}",
    "description": "Generate ID.",
    "lineNumber": 16,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "ID."
    },
    "params": []
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "hasstyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~hasstyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{hasstyle}",
    "description": "Verify that the style is present.",
    "lineNumber": 26,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styles",
        "description": "Css styles."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of verification."
    }
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "setstyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~setstyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{setstyle}",
    "description": "Set the CSS style to element.",
    "lineNumber": 48,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Target element object."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "style",
        "description": "Css style."
      }
    ],
    "return": null
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "unsetstyle",
    "memberof": "src/helper.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/helper.js~unsetstyle",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/helper.js",
    "importStyle": "{unsetstyle}",
    "description": "Unset the CSS style to element.",
    "lineNumber": 80,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "Target element object."
      },
      {
        "nullable": null,
        "types": [
          "string[]",
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "styles",
        "description": "Css styles."
      }
    ],
    "return": null
  },
  {
    "__docId__": 65,
    "kind": "file",
    "name": "src/highendrawer.js",
    "content": "import {\n  DEFAULT_DRAWER_PROPERTY,\n  DEFAULT_OVERLAY_PROPERTY,\n  DEFAULT_PROCESS,\n  DRAWER_STYLE,\n  OVERLAY_STYLE,\n  TOUCH_EVENTS,\n  TRANSITION_STYLE,\n} from './const';\n\nimport {isarray} from './util';\nimport * as helper from './helper';\nimport {support} from './support';\n\n/**\n * Class providing a drawer function.\n *\n * @public\n * @class\n * @example\n * var drawer = new Highendrawer({\n *   element: document.getElementById('drawer')\n * });\n */\nexport default class Highendrawer {\n  /**\n   * Initialize object.\n   *\n   * @constructor\n   * @param {Drawer} drawer Initial parameters of drawer.\n   */\n  constructor(drawer) {\n    /**\n     * Drawer status ('open' or 'close')\n     *\n     * @public\n     * @type {string}\n     */\n    this.state = 'close';\n\n    this._id = helper.generateid();\n    this._drawer = Object.assign({}, DEFAULT_DRAWER_PROPERTY, drawer);\n    this._overlay = this._drawer.overlay === false ?\n      false :\n      Object.assign({}, DEFAULT_OVERLAY_PROPERTY, this._drawer.overlay);\n    this._timeoutid = null;\n    this._intervalid = null;\n    this._process = Object.assign({}, DEFAULT_PROCESS);\n    this._enabled = false;\n    this._handler = this._getdrawerhandler();\n\n    if (!this._drawer.element) {\n      throw new Error(`'element' is required.`);\n    }\n\n    if (!this._isHTMLElement(this._drawer.element)) {\n      throw new Error(`Invalid HTMLElement specified for 'element'.`);\n    }\n\n    if (this._drawer.enabledmaxwidth > -1) {\n      window.addEventListener('resize', () => {\n        if (this._enabled\n          && window.innerWidth > this._drawer.enabledmaxwidth) {\n          this.destroy();\n        } else if (!this._enabled\n          && window.innerWidth <= this._drawer.enabledmaxwidth) {\n          this.create();\n        }\n      });\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      window.history.replaceState({\n        id: this._id,\n      }, null, null);\n    }\n\n    if (this._drawer.initcreate\n      && (this._drawer.enabledmaxwidth < 0\n        || window.innerWidth <= this._drawer.enabledmaxwidth)\n    ) {\n      this.create();\n    }\n  }\n\n  /**\n   * Create the drawer set.\n   *\n   * @public\n   */\n  create() {\n    try {\n      this._createdrawer();\n      this._createoverlay();\n      this._enabled = true;\n\n      if (this._drawer.oncreate) {\n        this._drawer.oncreate.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Destroy the drawer set.\n   *\n   * @public\n   */\n  destroy() {\n    try {\n      if (this.state === 'open') {\n        this.close(0, true, true);\n      }\n\n      this._destroydrawer();\n      this._destroyoverlay();\n      this._enabled = false;\n\n      if (this._drawer.ondestroy) {\n        this._drawer.ondestroy.apply(this, [this._drawer]);\n      }\n    } catch (e) {\n      if (this._drawer && this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Open drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for open.\n   */\n  open(duration = null, isfireevent = true, ischangehistory = true) {\n    return this._changestate(\n      0,\n      duration,\n      {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onopen : null,\n        fail: isfireevent ? this._drawer.onerror : null,\n      },\n      ischangehistory\n    );\n  }\n\n  /**\n   * Close drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for close.\n   */\n  close(duration = null, isfireevent = true, ischangehistory = true) {\n    return this._changestate(\n      this._getminposition(),\n      duration,\n      {\n        onchangestate: isfireevent ? this._drawer.onchangestate : null,\n        done: isfireevent ? this._drawer.onclose : null,\n        fail: isfireevent ? this._drawer.onerror : null,\n      },\n      ischangehistory\n    );\n  }\n\n  /**\n   * Toggle drawer.\n   *\n   * @public\n   * @param {number} [duration] Drawer moving time.\n   * @param {boolean} [isfireevent] Whether to fire an event on the drawer.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object for toggle.\n   */\n  toggle(duration = null, isfireevent = true, ischangehistory = true) {\n    return new Promise((resolve, reject) => {\n      try {\n        this[this.state === 'open' ? 'close' : 'open'](duration, isfireevent, ischangehistory)\n          .then(resolve, reject);\n      } catch (e) {\n        reject(e);\n      }\n    });\n  }\n\n  /**\n   * Create drawer.\n   */\n  _createdrawer() {\n    helper.setstyle(\n      this._drawer.element,\n      Object.assign(\n        {},\n        DRAWER_STYLE,\n        support.cssanim ? TRANSITION_STYLE : {}\n      )\n    );\n\n    this._resetdrawer();\n\n    Object.keys(this._handler).forEach((name) => {\n      window.addEventListener(name, this._handler[name]);\n    });\n  }\n\n  /**\n   * Destroy drawer.\n   */\n  _destroydrawer() {\n    Object.keys(this._handler).forEach((name) => {\n      window.removeEventListener(name, this._handler[name]);\n    });\n\n    this._resetdrawer(true);\n\n    helper.unsetstyle(\n      this._drawer.element,\n      Object.keys(\n        Object.assign(\n          {},\n          DRAWER_STYLE,\n          support.cssanim ? TRANSITION_STYLE : {}\n        )\n      )\n    );\n  }\n\n  /**\n   * Create overlay.\n   */\n  _createoverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.zindex === -1) {\n      this._overlay.zindex = this._drawer.zindex - 1;\n    }\n\n    if (!this._overlay.element) {\n      this._overlay.element = window.document.createElement('div');\n      this._overlay.isautocreated = true;\n\n      helper.setstyle(\n        this._overlay.element,\n        Object.assign(\n          {},\n          OVERLAY_STYLE,\n          support.cssanim ? TRANSITION_STYLE : {}\n        )\n      );\n    }\n\n    if (!this._overlay.touchhandler) {\n      this._overlay.touchhandler = (e) => {\n        this.close();\n      };\n    }\n\n    window.document.body.appendChild(this._overlay.element);\n  }\n\n  /**\n   * Destroy overlay.\n   */\n  _destroyoverlay() {\n    if (this._overlay === false) {\n      return;\n    }\n\n    if (this._overlay.element) {\n      this._overlay.element.removeEventListener('click', this._overlay.touchhandler);\n\n      if (this._overlay.isautocreated) {\n        this._overlay.element.parentNode.removeChild(this._overlay.element);\n      }\n    }\n  }\n\n  /**\n   * Reset drawer.\n   *\n   * @param {boolean} [isunset] Unset style.\n   */\n  _resetdrawer(isunset = false) {\n    try {\n      this._setprops();\n\n      let ims = this._getinitdrawerstyle();\n\n      if (isunset) {\n        helper.unsetstyle(this._drawer.element, Object.keys(ims));\n      } else {\n        helper.setstyle(this._drawer.element, ims);\n      }\n    } catch (e) {\n      if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n  }\n\n  /**\n   * Show drawer.\n   */\n  _showdrawer() {\n    helper.setstyle(this._drawer.element, {\n      zIndex: this._drawer.zindex,\n      opacity: 1,\n    });\n  }\n\n  /**\n   * Hide drawer.\n   */\n  _hidedrawer() {\n    helper.setstyle(this._drawer.element, {\n      zIndex: -1,\n      opacity: 0,\n    });\n  }\n\n  /**\n   * Show overlay.\n   */\n  _showoverlay() {\n    helper.setstyle(this._overlay.element, {\n      zIndex: this._overlay.zindex,\n      display: 'block',\n    });\n  }\n\n  /**\n   * Hide overlay.\n   */\n  _hideoverlay() {\n    helper.setstyle(this._overlay.element, {\n      zIndex: -1,\n      display: 'none',\n    });\n  }\n\n  /**\n   * Set properties.\n   */\n  _setprops() {\n    // set sizepixel\n    let sizepixel = this._normalizepixel(\n      this._drawer.size\n    );\n\n    if (this._drawer.maxsize && this._drawer.maxsize !== -1) {\n      let maxsizepixel = this._normalizepixel(\n        this._drawer.maxsize\n      );\n\n      if (sizepixel > maxsizepixel) {\n        sizepixel = maxsizepixel;\n      }\n    }\n\n    this._sizepixel = sizepixel;\n\n    // set position\n    this._position = typeof this._position === 'undefined' ?\n      null :\n      this._position;\n  }\n\n  /**\n   * Return initial style of drawer.\n   *\n   * @return {Object} Style for drawer.\n   */\n  _getinitdrawerstyle() {\n    let style = null;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        style = {\n          width: '100%',\n          height: `${this._sizepixel}px`,\n          top: `-${this._sizepixel}px`,\n          right: 'auto',\n          bottom: 'auto',\n          left: 0,\n        };\n        break;\n      case 'right':\n        style = {\n          width: `${this._sizepixel}px`,\n          height: '100%',\n          top: 0,\n          right: `-${this._sizepixel}px`,\n          bottom: 'auto',\n          left: 'auto',\n        };\n        break;\n      case 'bottom':\n        style = {\n          width: '100%',\n          height: `${this._sizepixel}px`,\n          top: 'auto',\n          right: 'auto',\n          bottom: `-${this._sizepixel}px`,\n          left: 0,\n        };\n        break;\n      case 'left':\n        style = {\n          width: `${this._sizepixel}px`,\n          height: '100%',\n          top: 0,\n          right: 'auto',\n          bottom: 'auto',\n          left: `-${this._sizepixel}px`,\n        };\n        break;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n\n    return Object.assign(style, this._drawer.style || {});\n  }\n\n  /**\n   * Return style for moving the drawer.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for drawer.\n   */\n  _getdrawerstyle(position, duration = null) {\n    let minp = this._getminposition(this._drawer);\n    let style = {};\n\n    if (support.cssanim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n\n      switch (this._drawer.direction) {\n        case 'top':\n          style.transform = `${support.transrate}(0,${-(minp - position)}px,0)`;\n          break;\n        case 'right':\n          style.transform = `${support.transrate}(${minp - position}px,0,0)`;\n          break;\n        case 'bottom':\n          style.transform = `${support.transrate}(0,${minp - position}px,0)`;\n          break;\n        case 'left':\n          style.transform = `${support.transrate}(${-(minp - position)}px,0,0)`;\n          break;\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    } else {\n      style[this._drawer.direction] = `${position}px`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Return style for moving the overlay.\n   *\n   * @param {float} opacity Overlay opacity.\n   * @param {number} [duration] Drawer moving time.\n   * @return {Object} Move style for overlay.\n   */\n  _getoverlaystyle(opacity, duration = null) {\n    let style = {\n      opacity,\n    };\n\n    if (support.cssanim) {\n      style.transitionDuration = `${duration === null ? this._drawer.duration : duration}ms`;\n    }\n\n    return style;\n  }\n\n  /**\n   * Make animation with CSS3.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _cssanimate(duration) {\n    helper.setstyle(\n      this._overlay.element,\n      this._getoverlaystyle(\n        this._getoverlayopacityfromposition(this._position),\n        duration\n      )\n    );\n\n    helper.setstyle(\n      this._drawer.element,\n      this._getdrawerstyle(this._position, duration)\n    );\n  }\n\n  /**\n   * Make animation with Javascript.\n   *\n   * @param {number} duration Drawer moving time.\n   */\n  _jsanimate(duration) {\n    let start = +new Date();\n    let fromopy = this._getoverlayopacityfromstyle();\n    let toopy = this._getoverlayopacityfromposition(this._position);\n    let frompos = this._getdrawerpositionfromstyle();\n    let topos = this._position;\n\n    if (this._intervalid) {\n      clearInterval(this._intervalid);\n    }\n\n    this._intervalid = setInterval(() => {\n      let time = new Date() - start;\n      let nowpos = null;\n      let nowopy = null;\n\n      if (time > duration) {\n        clearInterval(this._intervalid);\n        this._intervalid = null;\n        nowopy = toopy;\n        nowpos = topos;\n      } else {\n        let prp = (time /= duration) * (time - 2);\n        nowopy = fromopy - ((toopy - fromopy) * prp);\n        nowpos = frompos - ((topos - frompos) * prp);\n      }\n\n      helper.setstyle(\n        this._overlay.element,\n        this._getoverlaystyle(nowopy, duration)\n      );\n\n      helper.setstyle(\n        this._drawer.element,\n        this._getdrawerstyle(nowpos, duration)\n      );\n    }, 10);\n  }\n\n  /**\n   * Return state by touch movement.\n   *\n   * @return {string} State by touch movement.\n   */\n  _gettouchmovestate() {\n    if (this._process.time.end - this._process.time.start <= 300) {\n      let len = this._process.touches.length;\n      let moveinfo = this._gettouchmoveinfo(\n        this._process.touches[len - 2],\n        this._process.touches[len - 1]\n      );\n      let vertical = moveinfo.axis === 'vertical';\n      let horizontal = moveinfo.axis === 'horizontal';\n      let top = this._drawer.direction === 'top' && moveinfo.y >= 0;\n      let right = this._drawer.direction === 'right' && moveinfo.x < 0;\n      let bottom = this._drawer.direction === 'bottom' && moveinfo.y < 0;\n      let left = this._drawer.direction === 'left' && moveinfo.x >= 0;\n\n      return (vertical && (bottom || top)) ||\n        (horizontal && (right || left)) ?\n        'open' :\n        'close';\n    }\n\n    return this._getstatefromposition();\n  }\n\n  /**\n   * Return drawer event handler.\n   *\n   * @return {Object} Drawer event handler.\n   */\n  _getdrawerhandler() {\n    let handler = {};\n\n    handler.resize = () => {\n      this._resetdrawer();\n      this[this.state](0, false, false);\n\n      if (this._drawer.onresize) {\n        this._drawer.onresize.apply(\n          this,\n          [this._drawer]\n        );\n      }\n    };\n\n    if (this._drawer.swipeable) {\n      for (let event of TOUCH_EVENTS) {\n        handler[event] = this._touchhandler.bind(this);\n      }\n    }\n\n    if (window.history\n      && window.history.pushState\n      && this._drawer.history\n    ) {\n      handler.popstate = (e) => {\n        if (e.state && e.state.id === this._id && this.state === 'open') {\n          this.close(null, true, false);\n        }\n      };\n    }\n\n    return handler;\n  }\n\n  /**\n   * Touch event handler.\n   *\n   * @param {Event} ev Touch event object.\n   * @return {boolean} Event bubbling.\n   */\n  _touchhandler(ev) {\n    try {\n      if (ev.touches.length > 1) {\n        return true;\n      }\n\n      let touch = ev.touches[0];\n\n      if (touch) {\n        this._process.touches.push(touch);\n      }\n\n      switch (ev.type) {\n        case 'touchstart':\n          this._ontouchstart(ev);\n          break;\n        case 'touchmove':\n          this._ontouchmove(ev);\n          break;\n        case 'touchcancel':\n        case 'touchend':\n          this._ontouchfinish(ev);\n          break;\n        default:\n          break;\n      }\n    } catch (e) {\n      if (this._drawer.onerror && typeof this._drawer.onerror === 'function') {\n        this._drawer.onerror.apply(this, [e]);\n      } else {\n        throw e;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * Touch start event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchstart(ev) {\n    this._process.time.start = new Date().getTime();\n  }\n\n  /**\n   * Touch move event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchmove(ev) {\n    let len = this._process.touches.length;\n\n    if (len < 2) {\n      return;\n    }\n\n    if (!this._process.istouchpointactive) {\n      this._process.istouchpointactive = this._istouchpointactive();\n    }\n\n    if (!this._process.istouchpointactive) {\n      return;\n    }\n\n    if (this._process.istouchdirectionactive === null) {\n      this._process.istouchdirectionactive = this._istouchdirectionactive();\n    }\n\n    if (!this._process.istouchdirectionactive) {\n      return;\n    }\n\n    let isfiretouchstart = false;\n    let istouchactive = this._process.istouchpointactive &&\n        this._process.istouchdirectionactive;\n\n    if (!istouchactive) {\n      return;\n    }\n\n    if (!this._process.istouchactive) {\n      this._process.istouchactive = istouchactive;\n      this._showoverlay();\n      this._showdrawer();\n\n      if (this._drawer.ontouchstart) {\n        isfiretouchstart = true;\n      }\n    }\n\n    ev.stopPropagation();\n    ev.preventDefault();\n\n    this._position = this._getdrawerpositionfromtouches(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n\n    if (isfiretouchstart) {\n      this._drawer.ontouchstart.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n\n    helper.setstyle(\n      this._overlay.element,\n      this._getoverlaystyle(\n        this._getoverlayopacityfromposition(this._position),\n        0\n      )\n    );\n\n    helper.setstyle(\n      this._drawer.element,\n      this._getdrawerstyle(this._position, 0)\n    );\n\n    if (this._drawer.ontouchmove) {\n      this._drawer.ontouchmove.apply(\n        this,\n        [this._drawer, this._position]\n      );\n    }\n  }\n\n  /**\n   * Touch finish event handler.\n   *\n   * @param {Event} ev Touch event object.\n   */\n  _ontouchfinish(ev) {\n    let len = this._process.touches.length;\n\n    if (this._process.istouchactive && len >= 2) {\n      this._process.time.end = new Date().getTime();\n\n      let state = this._gettouchmovestate();\n      let changestate = this.state !== state;\n\n      this[state](null, changestate, changestate);\n\n      if (this._drawer.ontouchfinish) {\n        this._drawer.ontouchfinish.apply(\n          this,\n          [\n            this._drawer,\n            this._getdrawerpositionfromtouches(\n              this._process.touches[len - 2],\n              this._process.touches[len - 1]\n            ),\n          ]\n        );\n      }\n    }\n\n    this._process.touches = [];\n    this._process.istouchactive = null;\n    this._process.istouchpointactive = null;\n    this._process.istouchdirectionactive = null;\n    this._process.time.start = 0;\n    this._process.time.end = 0;\n  }\n\n  /**\n   * Return whether or not a valid touch.\n   *\n   * @param {number} position Moving position.\n   * @param {number} [duration=null] Drawer moving time.\n   * @param {Object} [callbacks=null] Callback objects.\n   * @param {boolean} [ischangehistory=false] Make a change in history.\n   * @return {Promise} Promise object.\n   */\n  _changestate(\n    position,\n    duration = null,\n    callbacks = null,\n    ischangehistory = true\n  ) {\n    return this._handlecallback(new Promise((resolve, reject) => {\n      try {\n        if (!this._enabled) {\n          throw new Error('Drawer is disabled.');\n        }\n\n        this._position = position;\n\n        let du = duration === null ? this._drawer.duration : duration;\n\n        if (this._timeoutid !== null) {\n          clearTimeout(this._timeoutid);\n          this._timeoutid = null;\n        }\n\n        let state = this._getstatefromposition();\n\n        if (state === 'open') {\n          this._showoverlay();\n          this._showdrawer();\n        } else {\n          this._overlay.element.removeEventListener('click', this._overlay.touchhandler);\n        }\n\n        if (ischangehistory\n          && this._drawer.history\n          && window.history\n          && window.history.pushState\n        ) {\n          if (state === 'open') {\n            window.history.pushState({\n              id: this._id,\n            }, null, null);\n          } else {\n            window.history.back();\n          }\n        }\n\n        this[support.cssanim\n          ? '_cssanimate'\n          : '_jsanimate'](du);\n\n        this._timeoutid = setTimeout(\n          () => {\n            if (state === 'open') {\n              this._overlay.element.addEventListener('click', this._overlay.touchhandler);\n            } else {\n              this._hidedrawer();\n              this._hideoverlay();\n            }\n\n            this._timeoutid = null;\n          },\n          du\n        );\n\n        this.state = state;\n\n        if (typeof callbacks === 'object' && callbacks.onchangestate) {\n          callbacks.onchangestate.apply(\n            this,\n            [this._drawer, state]\n          );\n        }\n\n        resolve.apply(this, [this._drawer]);\n      } catch (e) {\n        reject(e);\n      }\n    }), {\n      done: typeof callbacks === 'object' && callbacks.done ? callbacks.done : null,\n      fail: typeof callbacks === 'object' && callbacks.fail ? callbacks.fail : null,\n    });\n  }\n\n  /**\n   * Return whether or not a valid touch point.\n   *\n   * @return {boolean} Result of valid touch point.\n   */\n  _istouchpointactive() {\n    let rg = this._getrange(\n      this.state === 'open' ?\n        this._sizepixel :\n        this._drawer.swipearea\n    );\n    let len = this._process.touches.length;\n\n    return (rg.from.x <= this._process.touches[len - 2].clientX &&\n      this._process.touches[len - 2].clientX <= rg.to.x &&\n      rg.from.y <= this._process.touches[len - 2].clientY &&\n      this._process.touches[len - 2].clientY <= rg.to.y);\n  }\n\n  /**\n   * Return whether or not a valid touch direction.\n   *\n   * @return {boolean} Result of valid touch direction.\n   */\n  _istouchdirectionactive() {\n    let len = this._process.touches.length;\n    let moveinfo = this._gettouchmoveinfo(\n      this._process.touches[len - 2],\n      this._process.touches[len - 1]\n    );\n    let vertical = moveinfo.axis === 'vertical';\n    let horizontal = moveinfo.axis === 'horizontal';\n\n    if (!(vertical &&\n      (this._drawer.direction === 'top' ||\n      this._drawer.direction === 'bottom') ||\n      horizontal &&\n      (this._drawer.direction === 'right' ||\n      this._drawer.direction === 'left'))\n    ) {\n      return false;\n    }\n\n    return (\n      (\n        this.state === 'open' &&\n        (\n          this._drawer.direction === 'top' && moveinfo.y < 0 ||\n          this._drawer.direction === 'right' && moveinfo.x >= 0 ||\n          this._drawer.direction === 'bottom' && moveinfo.y >= 0 ||\n          this._drawer.direction === 'left' && moveinfo.x < 0\n        )\n      ) ||\n      (\n        this.state === 'close' &&\n        (\n          this._drawer.direction === 'top' && moveinfo.y >= 0 ||\n          this._drawer.direction === 'right' && moveinfo.x < 0 ||\n          this._drawer.direction === 'bottom' && moveinfo.y < 0 ||\n          this._drawer.direction === 'left' && moveinfo.x >= 0\n        )\n      )\n    );\n  }\n\n  /**\n   * Return the state of the drawer.\n   *\n   * @return {string} State of the drawer.\n   */\n  _getstatefromposition() {\n    let pos = this._position === null ?\n      this._getdrawerpositionfromstyle() :\n      this._position;\n\n    return Math.abs(pos) < this._sizepixel / 2 ?\n      'open' :\n      'close';\n  }\n\n  /**\n   * Return the position of the drawer.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {number} Position of the drawer.\n   */\n  _getdrawerpositionfromtouches(touchbasis, touchlast) {\n    let distance = this._getdistance(\n      this._gettouchmoveinfo(touchbasis, touchlast)\n    );\n\n    let curpos = this._position === null ?\n      this._getdrawerpositionfromstyle() :\n      this._position;\n\n    let pos = Math.round(curpos + distance);\n    let minp = this._getminposition(this._drawer);\n\n    if (pos > 0) {\n      pos = 0;\n    } else if (pos < minp) {\n      pos = minp;\n    }\n\n    return pos;\n  }\n\n  /**\n   * Return the position in the style.\n   *\n   * @return {number} Position in the style.\n   */\n  _getdrawerpositionfromstyle() {\n    let value = this._drawer.element.style[this._drawer.direction];\n    return this._normalizenumber(value).value;\n  }\n\n\n  /**\n   * Return the opacity of the overlay.\n   *\n   * @param {number} position Moving position.\n   * @return {number} Position of the drawer.\n   */\n  _getoverlayopacityfromposition(position) {\n    let minp = this._getminposition(this._drawer);\n    let posratio = 1 - (Math.abs(position) / Math.abs(minp));\n    return ((this._overlay.opacity * posratio) * 10000) / 10000;\n  }\n\n  /**\n   * Return the opacity in the style.\n   *\n   * @return {number} Opacity in the style.\n   */\n  _getoverlayopacityfromstyle() {\n    return parseFloat(this._overlay.element.style.opacity);\n  }\n\n  /**\n   * Return the swipe range.\n   *\n   * @param {string|number} value Target swipe area value.\n   * @return {Object} Drag range.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getrange(value) {\n    let basis = this._convertpixelabs(value);\n    let width = window.innerWidth;\n    let height = window.innerHeight;\n\n    switch (this._drawer.direction) {\n      case 'top':\n        return {from: {x: 0, y: 0}, to: {x: width, y: basis}};\n      case 'right':\n        return {from: {x: basis, y: 0}, to: {x: width, y: height}};\n      case 'bottom':\n        return {from: {x: 0, y: basis}, to: {x: width, y: height}};\n      case 'left':\n        return {from: {x: 0, y: 0}, to: {x: basis, y: height}};\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return a value converted to the absolute value of the pixel.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Converted to the absolute value of the pixel.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _convertpixelabs(value) {\n    let nvalue = this._normalizepixel(value);\n\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'left':\n        return nvalue;\n      case 'right':\n        return window.innerWidth - nvalue;\n      case 'bottom':\n        return window.innerHeight - nvalue;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the normalized pixel value.\n   *\n   * @param {string|number} value Target value.\n   * @return {number} Normalized pixel value.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _normalizepixel(value) {\n    let normalized = this._normalizenumber(value);\n\n    if (normalized.unit === 'number' || normalized.unit === 'pixel') {\n      return normalized.value;\n    } else if (normalized.unit === 'percent') {\n      switch (this._drawer.direction) {\n        case 'top':\n        case 'bottom':\n          return window.innerHeight * (normalized.value / 100);\n        case 'right':\n        case 'left':\n          return window.innerWidth * (normalized.value / 100);\n        default:\n          throw new Error(`'${this._drawer.direction}' does not support`);\n      }\n    }\n  }\n\n  /**\n   * Return the numeric normalized information.\n   *\n   * @param {string|number} value Target value.\n   * @return {Object} Numeric normalized information.\n   * @throws {Error} Is thrown if value is invalid.\n   */\n  _normalizenumber(value) {\n    if (typeof value === 'number') {\n      return {value: value, unit: 'number'};\n    } else if (String(value).match(/^[.\\-0-9]+$/)) {\n      return {value: Number(value), unit: 'number'};\n    } else if (value.match(/^[.\\-0-9]+px$/)) {\n      return {value: Number(value.replace(/px$/ig, '')), unit: 'pixel'};\n    } else if (value.match(/[.\\-0-9]+%$/)) {\n      return {value: Number(value.replace(/%$/ig, '')), unit: 'percent'};\n    }\n\n    throw new Error(`'${value}' does not support`);\n  }\n\n  /**\n   * Return to the minimum position for the drawer.\n   *\n   * @return {number} Minimum position for the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getminposition() {\n    switch (this._drawer.direction) {\n      case 'top':\n      case 'bottom':\n        return -1 * this._drawer.element.offsetHeight;\n      case 'right':\n      case 'left':\n        return -1 * this._drawer.element.offsetWidth;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the distance of the drawer.\n   *\n   * @param {Object} moveinfo Movement information of the drawer.\n   * @return {number} Distance of the drawer.\n   * @throws {Error} Is thrown if direction value is invalid.\n   */\n  _getdistance(moveinfo) {\n    switch (this._drawer.direction) {\n      case 'top':\n        return moveinfo.y;\n      case 'right':\n        return -1 * moveinfo.x;\n      case 'bottom':\n        return -1 * moveinfo.y;\n      case 'left':\n        return moveinfo.x;\n      default:\n        throw new Error(`'${this._drawer.direction}' does not support`);\n    }\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Object} touchbasis Basic touch information.\n   * @param {Object} touchlast Last touch information.\n   * @return {Object} Movement distance of the x, y direction, movement direction.\n   */\n  _gettouchmoveinfo(touchbasis, touchlast) {\n    let x = touchlast.clientX - touchbasis.clientX;\n    let y = touchlast.clientY - touchbasis.clientY;\n    let axis = Math.abs(x) >= Math.abs(y) ? 'horizontal' : 'vertical';\n\n    return {x, y, axis};\n  }\n\n  /**\n   * Validate HTMLElement\n   *\n   * @param {*} obj HTMLElement to be verified.\n   * @return {boolean} Result of valid HTMLElement.\n   */\n  _isHTMLElement(obj) {\n    try {\n      return obj instanceof HTMLElement;\n    } catch (e) {\n      return (typeof obj === 'object') &&\n        (obj.nodeType === 1) &&\n        (typeof obj.style === 'object') &&\n        (typeof obj.ownerDocument === 'object');\n    }\n  }\n\n  /**\n   * Return the information of touch move.\n   *\n   * @param {Promise} promise Promise instance.\n   * @param {Object} callbacks Callback function with the key to 'done', 'fail', 'always' (each optional).\n   * @return {Promise} Promise instance.\n   */\n  _handlecallback(promise, callbacks) {\n    if (!callbacks) {\n      return promise;\n    }\n\n    for (let key of Object.keys(callbacks)) {\n      let callback = callbacks[key];\n\n      if (!callback) {\n        continue;\n      }\n\n      let cb = isarray(callback) ? callback : [callback];\n      let rcb = null;\n\n      switch (key) {\n        case 'done':\n          rcb = (prom, value) => prom.then(value.bind(this));\n          break;\n        case 'fail':\n          rcb = (prom, value) => prom.catch(value.bind(this));\n          break;\n        case 'always':\n          rcb = (prom, value) => prom.then(value.bind(this), value.bind(this));\n          break;\n        default:\n          break;\n      }\n\n      if (rcb) {\n        cb.reduce(rcb, promise);\n      }\n    }\n\n    return promise;\n  }\n}\n\nmodule.exports = Highendrawer;\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/highendrawer.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 66,
    "kind": "class",
    "name": "Highendrawer",
    "memberof": "src/highendrawer.js",
    "static": true,
    "longname": "src/highendrawer.js~Highendrawer",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/highendrawer.js",
    "importStyle": "Highendrawer",
    "description": "Class providing a drawer function.",
    "examples": [
      "var drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});"
    ],
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@class",
        "tagValue": ""
      }
    ],
    "interface": false
  },
  {
    "__docId__": 67,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#constructor",
    "access": "public",
    "description": "Initialize object.",
    "lineNumber": 32,
    "unknown": [
      {
        "tagName": "@constructor",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "Drawer"
        ],
        "spread": false,
        "optional": false,
        "name": "drawer",
        "description": "Initial parameters of drawer."
      }
    ]
  },
  {
    "__docId__": 68,
    "kind": "member",
    "name": "state",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#state",
    "access": "public",
    "description": "Drawer status ('open' or 'close')",
    "lineNumber": 39,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 69,
    "kind": "member",
    "name": "_id",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_id",
    "access": "private",
    "description": null,
    "lineNumber": 41,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "member",
    "name": "_drawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_drawer",
    "access": "private",
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "member",
    "name": "_overlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_overlay",
    "access": "private",
    "description": null,
    "lineNumber": 43,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "member",
    "name": "_timeoutid",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_timeoutid",
    "access": "private",
    "description": null,
    "lineNumber": 46,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 73,
    "kind": "member",
    "name": "_intervalid",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_intervalid",
    "access": "private",
    "description": null,
    "lineNumber": 47,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "member",
    "name": "_process",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_process",
    "access": "private",
    "description": null,
    "lineNumber": 48,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 75,
    "kind": "member",
    "name": "_enabled",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_enabled",
    "access": "private",
    "description": null,
    "lineNumber": 49,
    "undocument": true,
    "type": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 76,
    "kind": "member",
    "name": "_handler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_handler",
    "access": "private",
    "description": null,
    "lineNumber": 50,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "create",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#create",
    "access": "public",
    "description": "Create the drawer set.",
    "lineNumber": 94,
    "params": [],
    "return": null
  },
  {
    "__docId__": 79,
    "kind": "method",
    "name": "destroy",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#destroy",
    "access": "public",
    "description": "Destroy the drawer set.",
    "lineNumber": 117,
    "params": [],
    "return": null
  },
  {
    "__docId__": 81,
    "kind": "method",
    "name": "open",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#open",
    "access": "public",
    "description": "Open drawer.",
    "lineNumber": 148,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isfireevent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "ischangehistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for open."
    }
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "close",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#close",
    "access": "public",
    "description": "Close drawer.",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isfireevent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "ischangehistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for close."
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "toggle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#toggle",
    "access": "public",
    "description": "Toggle drawer.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isfireevent",
        "description": "Whether to fire an event on the drawer."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "ischangehistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object for toggle."
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "_createdrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_createdrawer",
    "access": "private",
    "description": "Create drawer.",
    "lineNumber": 206,
    "params": [],
    "return": null
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "_destroydrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_destroydrawer",
    "access": "private",
    "description": "Destroy drawer.",
    "lineNumber": 226,
    "params": [],
    "return": null
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "_createoverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_createoverlay",
    "access": "private",
    "description": "Create overlay.",
    "lineNumber": 248,
    "params": [],
    "return": null
  },
  {
    "__docId__": 87,
    "kind": "method",
    "name": "_destroyoverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_destroyoverlay",
    "access": "private",
    "description": "Destroy overlay.",
    "lineNumber": 283,
    "params": [],
    "return": null
  },
  {
    "__docId__": 88,
    "kind": "method",
    "name": "_resetdrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_resetdrawer",
    "access": "private",
    "description": "Reset drawer.",
    "lineNumber": 302,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "name": "isunset",
        "description": "Unset style."
      }
    ],
    "return": null
  },
  {
    "__docId__": 89,
    "kind": "method",
    "name": "_showdrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_showdrawer",
    "access": "private",
    "description": "Show drawer.",
    "lineNumber": 325,
    "params": [],
    "return": null
  },
  {
    "__docId__": 90,
    "kind": "method",
    "name": "_hidedrawer",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_hidedrawer",
    "access": "private",
    "description": "Hide drawer.",
    "lineNumber": 335,
    "params": [],
    "return": null
  },
  {
    "__docId__": 91,
    "kind": "method",
    "name": "_showoverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_showoverlay",
    "access": "private",
    "description": "Show overlay.",
    "lineNumber": 345,
    "params": [],
    "return": null
  },
  {
    "__docId__": 92,
    "kind": "method",
    "name": "_hideoverlay",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_hideoverlay",
    "access": "private",
    "description": "Hide overlay.",
    "lineNumber": 355,
    "params": [],
    "return": null
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "_setprops",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_setprops",
    "access": "private",
    "description": "Set properties.",
    "lineNumber": 365,
    "params": [],
    "return": null
  },
  {
    "__docId__": 94,
    "kind": "member",
    "name": "_sizepixel",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_sizepixel",
    "access": "private",
    "description": null,
    "lineNumber": 381,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 95,
    "kind": "member",
    "name": "_position",
    "memberof": "src/highendrawer.js~Highendrawer",
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_position",
    "access": "private",
    "description": null,
    "lineNumber": 384,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "_getinitdrawerstyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getinitdrawerstyle",
    "access": "private",
    "description": "Return initial style of drawer.",
    "lineNumber": 394,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Style for drawer."
    },
    "params": []
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "_getdrawerstyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getdrawerstyle",
    "access": "private",
    "description": "Return style for moving the drawer.",
    "lineNumber": 452,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Move style for drawer."
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "_getoverlaystyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getoverlaystyle",
    "access": "private",
    "description": "Return style for moving the overlay.",
    "lineNumber": 489,
    "params": [
      {
        "nullable": null,
        "types": [
          "float"
        ],
        "spread": false,
        "optional": false,
        "name": "opacity",
        "description": "Overlay opacity."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Move style for overlay."
    }
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "_cssanimate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_cssanimate",
    "access": "private",
    "description": "Make animation with CSS3.",
    "lineNumber": 506,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": null
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "_jsanimate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_jsanimate",
    "access": "private",
    "description": "Make animation with Javascript.",
    "lineNumber": 526,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "duration",
        "description": "Drawer moving time."
      }
    ],
    "return": null
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "_gettouchmovestate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_gettouchmovestate",
    "access": "private",
    "description": "Return state by touch movement.",
    "lineNumber": 570,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "State by touch movement."
    },
    "params": []
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "_getdrawerhandler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getdrawerhandler",
    "access": "private",
    "description": "Return drawer event handler.",
    "lineNumber": 598,
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Drawer event handler."
    },
    "params": []
  },
  {
    "__docId__": 105,
    "kind": "method",
    "name": "_touchhandler",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_touchhandler",
    "access": "private",
    "description": "Touch event handler.",
    "lineNumber": 639,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Event bubbling."
    }
  },
  {
    "__docId__": 106,
    "kind": "method",
    "name": "_ontouchstart",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_ontouchstart",
    "access": "private",
    "description": "Touch start event handler.",
    "lineNumber": 681,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 107,
    "kind": "method",
    "name": "_ontouchmove",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_ontouchmove",
    "access": "private",
    "description": "Touch move event handler.",
    "lineNumber": 690,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "method",
    "name": "_ontouchfinish",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_ontouchfinish",
    "access": "private",
    "description": "Touch finish event handler.",
    "lineNumber": 772,
    "params": [
      {
        "nullable": null,
        "types": [
          "Event"
        ],
        "spread": false,
        "optional": false,
        "name": "ev",
        "description": "Touch event object."
      }
    ],
    "return": null
  },
  {
    "__docId__": 110,
    "kind": "method",
    "name": "_changestate",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_changestate",
    "access": "private",
    "description": "Return whether or not a valid touch.",
    "lineNumber": 814,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "callbacks",
        "description": "Callback objects."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "ischangehistory",
        "description": "Make a change in history."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise object."
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "_istouchpointactive",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_istouchpointactive",
    "access": "private",
    "description": "Return whether or not a valid touch point.",
    "lineNumber": 900,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid touch point."
    },
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "method",
    "name": "_istouchdirectionactive",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_istouchdirectionactive",
    "access": "private",
    "description": "Return whether or not a valid touch direction.",
    "lineNumber": 919,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid touch direction."
    },
    "params": []
  },
  {
    "__docId__": 118,
    "kind": "method",
    "name": "_getstatefromposition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getstatefromposition",
    "access": "private",
    "description": "Return the state of the drawer.",
    "lineNumber": 965,
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "State of the drawer."
    },
    "params": []
  },
  {
    "__docId__": 119,
    "kind": "method",
    "name": "_getdrawerpositionfromtouches",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getdrawerpositionfromtouches",
    "access": "private",
    "description": "Return the position of the drawer.",
    "lineNumber": 982,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchbasis",
        "description": "Basic touch information."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchlast",
        "description": "Last touch information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position of the drawer."
    }
  },
  {
    "__docId__": 120,
    "kind": "method",
    "name": "_getdrawerpositionfromstyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getdrawerpositionfromstyle",
    "access": "private",
    "description": "Return the position in the style.",
    "lineNumber": 1008,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position in the style."
    },
    "params": []
  },
  {
    "__docId__": 121,
    "kind": "method",
    "name": "_getoverlayopacityfromposition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getoverlayopacityfromposition",
    "access": "private",
    "description": "Return the opacity of the overlay.",
    "lineNumber": 1020,
    "params": [
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "position",
        "description": "Moving position."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Position of the drawer."
    }
  },
  {
    "__docId__": 122,
    "kind": "method",
    "name": "_getoverlayopacityfromstyle",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getoverlayopacityfromstyle",
    "access": "private",
    "description": "Return the opacity in the style.",
    "lineNumber": 1031,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Opacity in the style."
    },
    "params": []
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "_getrange",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getrange",
    "access": "private",
    "description": "Return the swipe range.",
    "lineNumber": 1042,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target swipe area value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Drag range."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "_convertpixelabs",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_convertpixelabs",
    "access": "private",
    "description": "Return a value converted to the absolute value of the pixel.",
    "lineNumber": 1068,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Converted to the absolute value of the pixel."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 125,
    "kind": "method",
    "name": "_normalizepixel",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_normalizepixel",
    "access": "private",
    "description": "Return the normalized pixel value.",
    "lineNumber": 1091,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Normalized pixel value."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 126,
    "kind": "method",
    "name": "_normalizenumber",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_normalizenumber",
    "access": "private",
    "description": "Return the numeric normalized information.",
    "lineNumber": 1117,
    "params": [
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "Target value."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Numeric normalized information."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if value is invalid."
      }
    ]
  },
  {
    "__docId__": 127,
    "kind": "method",
    "name": "_getminposition",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getminposition",
    "access": "private",
    "description": "Return to the minimum position for the drawer.",
    "lineNumber": 1137,
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Minimum position for the drawer."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ],
    "params": []
  },
  {
    "__docId__": 128,
    "kind": "method",
    "name": "_getdistance",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_getdistance",
    "access": "private",
    "description": "Return the distance of the drawer.",
    "lineNumber": 1157,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "moveinfo",
        "description": "Movement information of the drawer."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "number"
      ],
      "spread": false,
      "description": "Distance of the drawer."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Is thrown if direction value is invalid."
      }
    ]
  },
  {
    "__docId__": 129,
    "kind": "method",
    "name": "_gettouchmoveinfo",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_gettouchmoveinfo",
    "access": "private",
    "description": "Return the information of touch move.",
    "lineNumber": 1179,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchbasis",
        "description": "Basic touch information."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "touchlast",
        "description": "Last touch information."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": "Movement distance of the x, y direction, movement direction."
    }
  },
  {
    "__docId__": 130,
    "kind": "method",
    "name": "_isHTMLElement",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_isHTMLElement",
    "access": "private",
    "description": "Validate HTMLElement",
    "lineNumber": 1193,
    "params": [
      {
        "nullable": null,
        "types": [
          "*"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "HTMLElement to be verified."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Result of valid HTMLElement."
    }
  },
  {
    "__docId__": 131,
    "kind": "method",
    "name": "_handlecallback",
    "memberof": "src/highendrawer.js~Highendrawer",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/highendrawer.js~Highendrawer#_handlecallback",
    "access": "private",
    "description": "Return the information of touch move.",
    "lineNumber": 1211,
    "params": [
      {
        "nullable": null,
        "types": [
          "Promise"
        ],
        "spread": false,
        "optional": false,
        "name": "promise",
        "description": "Promise instance."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "callbacks",
        "description": "Callback function with the key to 'done', 'fail', 'always' (each optional)."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Promise instance."
    }
  },
  {
    "__docId__": 132,
    "kind": "file",
    "name": "src/support.js",
    "content": "'use strict';\n\nimport {hasstyle} from './helper';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nlet sup = {};\n\nsup.transform3d = hasstyle([\n  'perspectiveProperty',\n  'webkitPerspective',\n  'mozPerspective',\n  'oPerspective',\n  'msPerspective',\n]);\n\nsup.transform = hasstyle([\n  'transformProperty',\n  'webkitTransform',\n  'mozTransform',\n  'oTransform',\n  'msTransform',\n]);\n\nsup.transition = hasstyle([\n  'transitionProperty',\n  'webkitTransitionProperty',\n  'mozTransitionProperty',\n  'oTransitionProperty',\n  'msTransitionProperty',\n]);\n\nsup.cssanim = (sup.transform3d || sup.transform) &&\n  sup.transition;\n\nsup.transrate = sup.transform3d ?\n  'translate3d' :\n  'translate';\n\n/**\n * Browser support information.\n *\n * @type {Object}\n */\nexport const support = Object.freeze(sup);\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/support.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 133,
    "kind": "variable",
    "name": "sup",
    "memberof": "src/support.js",
    "static": true,
    "longname": "src/support.js~sup",
    "access": "public",
    "export": false,
    "importPath": "highendrawer/src/support.js",
    "importStyle": null,
    "description": "Browser support information.",
    "lineNumber": 10,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    },
    "ignore": true
  },
  {
    "__docId__": 134,
    "kind": "variable",
    "name": "support",
    "memberof": "src/support.js",
    "static": true,
    "longname": "src/support.js~support",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/support.js",
    "importStyle": "{support}",
    "description": "Browser support information.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/typedef.js",
    "content": "/**\n * Drawer object.\n *\n * @typedef {Object} Drawer\n * @property {!Object} element HTML DOM Element.\n * @property {string} [direction=\"right\"] Drawer placement direction.\n * @property {string|number} [size=\"80%\"] Drawer size. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {string|number} [maxsize=-1] Drawer max size. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {boolean} [swipeable=true] Enable opening and closing of the drawer with a swipe gesture.\n * @property {string|number} [swipearea=20] Swipeable area. In the case of character strings, the units are '%' and 'px' are supported.\n * @property {number} [duration=400] Drawer moving time.\n * @property {number} [zindex=9999] Drawer stacking order.\n * @property {Object} [style={}] Drawer's css style.\n * @property {boolean} [initcreate=true] Create a drawer at initialization.\n * @property {number} [enabledmaxwidth=-1] Maximum screen width with drawer enabled. Always valid when -1.\n * @property {boolean} [history=true] Activate if history is supported.\n * @property {Overlay} [overlay=null] Overlay object. If not specified, it will be created automatically. Specify false if it is unnecessary.\n * @property {function} [oncreate=null] Called when a drawer is created.\n * @property {function} [ondestroy=null] Called when a drawer is destroyed.\n * @property {function} [onopen=null] Called when a drawer is opened.\n * @property {function} [onclose=null] Called when a drawer is closed.\n * @property {function} [onchangestate=null] Called when the opening / closing state is changed.\n * @property {function} [onresize=null] Called when the size of the drawer has changed.\n * @property {function} [ontouchstart=null] Called when the drawer starts moving with a swipe gesture.\n * @property {function} [ontouchmove=null] Called when the drawer is moving with a swipe gesture.\n * @property {function} [ontouchfinish=null] Called when the drawer has finished moving with a swipe gesture.\n * @property {function} [onerror=null] Called when there is an error in processing within the object.\n */\n\n/**\n * Overlay object.\n *\n * @typedef {Object} Overlay\n * @property {Object} element HTML DOM Element.\n * @property {number} [opacity=0.6] Overlay object transparency.\n * @property {number} [zindex=-1] Overlay stacking order. If -1, zindex - 1 of the drawer is specified automatically.\n */\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/typedef.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "typedef",
    "name": "Drawer",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~Drawer",
    "access": "public",
    "description": "Drawer object.",
    "properties": [
      {
        "nullable": false,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "HTML DOM Element."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"right\"",
        "defaultRaw": "right",
        "name": "direction",
        "description": "Drawer placement direction."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "\"80%\"",
        "defaultRaw": "80%",
        "name": "size",
        "description": "Drawer size. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "maxsize",
        "description": "Drawer max size. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "swipeable",
        "description": "Enable opening and closing of the drawer with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "20",
        "defaultRaw": 20,
        "name": "swipearea",
        "description": "Swipeable area. In the case of character strings, the units are '%' and 'px' are supported."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "400",
        "defaultRaw": 400,
        "name": "duration",
        "description": "Drawer moving time."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "9999",
        "defaultRaw": 9999,
        "name": "zindex",
        "description": "Drawer stacking order."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "style",
        "description": "Drawer's css style."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "initcreate",
        "description": "Create a drawer at initialization."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "enabledmaxwidth",
        "description": "Maximum screen width with drawer enabled. Always valid when -1."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "history",
        "description": "Activate if history is supported."
      },
      {
        "nullable": null,
        "types": [
          "Overlay"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "overlay",
        "description": "Overlay object. If not specified, it will be created automatically. Specify false if it is unnecessary."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "oncreate",
        "description": "Called when a drawer is created."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "ondestroy",
        "description": "Called when a drawer is destroyed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onopen",
        "description": "Called when a drawer is opened."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onclose",
        "description": "Called when a drawer is closed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onchangestate",
        "description": "Called when the opening / closing state is changed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onresize",
        "description": "Called when the size of the drawer has changed."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "ontouchstart",
        "description": "Called when the drawer starts moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "ontouchmove",
        "description": "Called when the drawer is moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "ontouchfinish",
        "description": "Called when the drawer has finished moving with a swipe gesture."
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "null",
        "defaultRaw": null,
        "name": "onerror",
        "description": "Called when there is an error in processing within the object."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Drawer"
    }
  },
  {
    "__docId__": 137,
    "kind": "typedef",
    "name": "Overlay",
    "memberof": "src/typedef.js",
    "static": true,
    "longname": "src/typedef.js~Overlay",
    "access": "public",
    "description": "Overlay object.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "element",
        "description": "HTML DOM Element."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "0.6",
        "defaultRaw": 0.6,
        "name": "opacity",
        "description": "Overlay object transparency."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "-1",
        "defaultRaw": -1,
        "name": "zindex",
        "description": "Overlay stacking order. If -1, zindex - 1 of the drawer is specified automatically."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Overlay"
    }
  },
  {
    "__docId__": 138,
    "kind": "file",
    "name": "src/util.js",
    "content": "'use strict';\n\n/**\n * Convert the first letter to uppercase.\n *\n * @param {string} str Target character string.\n * @return {string} Converted string.\n */\nexport function ucfirst(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n}\n\n/**\n * Whether or not the object is an array.\n *\n * @param {any} obj Target object.\n * @return {boolean} Returns true if object is an Array.\n */\nexport function isarray(obj) {\n  return Object.prototype.toString.call(obj) === '[object Array]';\n}\n",
    "static": true,
    "longname": "/Users/jabaseaaaa/projects/highendrawer/src/util.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 139,
    "kind": "function",
    "name": "ucfirst",
    "memberof": "src/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~ucfirst",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/util.js",
    "importStyle": "{ucfirst}",
    "description": "Convert the first letter to uppercase.",
    "lineNumber": 9,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "str",
        "description": "Target character string."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "Converted string."
    }
  },
  {
    "__docId__": 140,
    "kind": "function",
    "name": "isarray",
    "memberof": "src/util.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/util.js~isarray",
    "access": "public",
    "export": true,
    "importPath": "highendrawer/src/util.js",
    "importStyle": "{isarray}",
    "description": "Whether or not the object is an array.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "any"
        ],
        "spread": false,
        "optional": false,
        "name": "obj",
        "description": "Target object."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Returns true if object is an Array."
    }
  },
  {
    "kind": "index",
    "content": "# Highendrawer\n\n[![Build Status](https://travis-ci.org/ym-aozora/highendrawer.svg?branch=master)](https://travis-ci.org/ym-aozora/highendrawer)\n[![npm version](https://badge.fury.io/js/highendrawer.svg)](https://badge.fury.io/js/highendrawer)\n\nHighendrawer provides javascript and css drawers to your website and applications.\n\n\n## Demo\n\nhttps://ym-aozora.github.io/highendrawer/\n\n\n## Usage\n\n### With ES6/import\n\n```javascript\nimport Highendrawer from 'highendrawer';\n\nlet drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n### With require\n\n```javascript\nconst Highendrawer = require('highendrawer');\n\nlet drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n### With Browser\n\n```html\n<script src=\"dist/highendrawer.js\"></script>\n```\n\n```javascript\nvar drawer = new Highendrawer({\n  element: document.getElementById('drawer')\n});\n```\n\n\n## Options (constructor)\n\nhttps://ym-aozora.github.io/highendrawer/doc/typedef/index.html#static-typedef-Drawer\n\n\n## API Documentation\n\nhttps://ym-aozora.github.io/highendrawer/doc/class/src/highendrawer.js~Highendrawer.html\n\n\n## Changelog\n\nhttps://github.com/ym-aozora/highendrawer/blob/master/CHANGELOG.md\n\n\n## License\n\n[MIT](https://raw.githubusercontent.com/ym-aozora/highendrawer/master/LICENSE)\n",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"highendrawer\",\n  \"description\": \"Highendrawer provides javascript and css drawers to your website and applications.\",\n  \"version\": \"0.0.15\",\n  \"author\": \"ym-aozora\",\n  \"bugs\": {\n    \"url\": \"https://github.com/ym-aozora/highendrawer/issues\"\n  },\n  \"devDependencies\": {\n    \"babel-core\": \"^6.26.0\",\n    \"babel-eslint\": \"^8.2.2\",\n    \"babel-loader\": \"^7.1.4\",\n    \"babel-plugin-transform-object-assign\": \"^6.22.0\",\n    \"babel-polyfill\": \"^6.26.0\",\n    \"babel-preset-env\": \"^1.6.1\",\n    \"browser-sync\": \"^2.23.6\",\n    \"browser-sync-webpack-plugin\": \"^2.0.1\",\n    \"esdoc\": \"^1.0.4\",\n    \"esdoc-standard-plugin\": \"^1.0.0\",\n    \"eslint\": \"^4.18.2\",\n    \"eslint-config-google\": \"^0.9.1\",\n    \"eslint-loader\": \"^2.0.0\",\n    \"istanbul-instrumenter-loader\": \"^3.0.0\",\n    \"jasmine-core\": \"^3.1.0\",\n    \"karma\": \"^2.0.0\",\n    \"karma-coverage-istanbul-reporter\": \"^1.4.2\",\n    \"karma-jasmine\": \"^1.1.1\",\n    \"karma-mocha\": \"^1.3.0\",\n    \"karma-phantomjs-launcher\": \"^1.0.4\",\n    \"karma-sourcemap-loader\": \"^0.3.7\",\n    \"karma-spec-reporter\": \"0.0.32\",\n    \"karma-webpack\": \"^2.0.13\",\n    \"phantomjs-polyfill\": \"0.0.2\",\n    \"webpack\": \"^4.1.1\",\n    \"webpack-cli\": \"^2.0.10\"\n  },\n  \"files\": [\n    \"dist\",\n    \"src\"\n  ],\n  \"homepage\": \"https://github.com/ym-aozora/highendrawer#readme\",\n  \"keywords\": [\n    \"brower\",\n    \"css\",\n    \"drawer\",\n    \"javascript\",\n    \"library\",\n    \"menu\"\n  ],\n  \"license\": \"MIT\",\n  \"main\": \"dist/highendrawer.min.js\",\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/ym-aozora/highendrawer.git\"\n  },\n  \"scripts\": {\n    \"build\": \"npm test && npm run-script doc && npm run-script clean && $(npm bin)/webpack\",\n    \"clean\": \"rm -rf ./dist\",\n    \"clean-doc\": \"rm -rf ./doc\",\n    \"clean-report\": \"rm -rf ./report\",\n    \"demo\": \"npm run-script clean && $(npm bin)/webpack -w\",\n    \"dev\": \"npm run-script clean-report && $(npm bin)/karma start\",\n    \"doc\": \"npm run-script clean-doc && $(npm bin)/esdoc\",\n    \"lint\": \"$(npm bin)/eslint ./src\",\n    \"start\": \"npm run-script demo\",\n    \"test\": \"npm run-script clean-report && $(npm bin)/karma start --single-run --browsers PhantomJS\"\n  }\n}\n",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/Users/jabaseaaaa/projects/highendrawer/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "# Changelog\n\n## 0.0.10\n\n* Fix to not interfere with the operation inside the drawer.\n\n\n## 0.0.9\n\n* Improve swipe accuracy.\n\n\n## 0.0.8\n\n* Fix to be able to scroll inside the drawer.\n* Change Property `isswipeable` to `swipeable`.\n* Change Property `isinitcreate` to `initcreate`.\n* Change Property `ishistory` to `history`.\n* Change default value of `maxsize` property to unspecified(-1).\n\n\n## 0.0.4\n\n* Fix history back when touching an overlay element during closed animation.\n\n\n## 0.0.1\n\n* First beta release.\n",
    "static": true,
    "access": "public"
  }
]